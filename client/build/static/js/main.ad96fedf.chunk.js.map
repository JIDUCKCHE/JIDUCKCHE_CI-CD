{"version":3,"sources":["_actions/types.js","hoc/auth.js","_actions/user_action.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/Like.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/commons/ducku512.png","components/views/NavBar/NavBar.js","utils/ReusableUtils.js","components/views/UploadPage/Section/DropAndCrop.js","components/views/UploadPage/UploadPage.js","components/views/MyPage/MyPage.js","components/views/EntUploadPage/EntUploadPage.js","components/views/ArtistUploadPage/ArtistUploadPage.js","components/views/commons/SingleComment.js","components/views/commons/ReplyComment.js","components/views/commons/Comment.js","components/views/ProdDetailPage/ProdDetailPage.js","components/views/commons/GridCard.js","components/views/ArtistDetailPage/ArtistDetailPage.js","components/views/ProdModifyPage/ProdModifyPage.js","components/views/NewProdPage/NewProdPage.js","components/views/RankingPage/RankingPage.js","components/views/PolicyPage/PolicyPage.js","components/views/NoticePage/Sections/NoticeGrid.js","components/views/NoticePage/NoticePage.js","components/views/NoticeDetailPage/NoticeDetailPage.js","components/views/UploadNoticePage/UploadNoticePage.js","components/views/Footer/Footer.js","components/views/NoticeModifyPage/NoticeModifyPage.js","components/views/AuthEmailPage/AuthEmailPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","AUTH_USER","REGISTER_USER","SpecificComponent","option","adminRoute","allowLevel","props","dispatch","useDispatch","useState","Ok","setOk","useEffect","request","axios","get","then","response","data","type","payload","auth","isAuth","level","message","warn","history","push","error","isAdmin","localStorage","removeItem","MainImage","Banner","setBanner","Page","setPage","Axios","success","result","warning","console","log","settings","beforeChange","current","next","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","arrows","style","width","height","map","banner","index","href","_id","background","preImagePath","backgroundSize","backgroundRepeat","backgroundPosition","position","zIndex","display","justifyContent","backdropFilter","src","maxWidth","top","left","color","fontSize","fontWeight","name","content","backgroundColor","marginTop","length","Like","variable","prodId","userId","noticeId","commentId","Likes","setLikes","LikeAction","setLikeAction","params","like","alert","title","theme","onClick","post","delete","paddingLeft","cursor","GridCards","lg","md","xs","image","alt","prodName","landing","flexDirection","CommentOutlined","comment","withRouter","user","getItem","BestProds","setBestProds","MainProd","setMainProd","Prods","setProds","catch","err","startId","endId","margin","alignItems","text","borderRadius","marginBottom","gutter","prod","Fragment","email","password","values","setValues","onChange","e","target","value","onSubmit","preventDefault","dataToSubmit","loginUser","loginSuccess","window","setItem","padding","placeholder","minWidth","border","outline","boxShadow","id","passwordCheck","EmailDup","setEmailDup","NameDup","setNameDup","checkDup","registerUser","minLength","maxLength","SubMenu","Menu","LeftMenu","useSelector","state","MenuLogin","mode","Item","userData","MenuNotLogin","Artists","setArtists","Ents","setEnts","ent","artist","aindex","entId","NavBar","Visible","setVisible","className","Logo","marginRight","placement","closable","onClose","visible","base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","extractImageFileExtensionFromBase64","base64Data","substring","indexOf","DropAndCrop","aspect","x","y","unit","Crop","setCrop","ImageRef","setImageRef","imagePreviewCanvasRef","canvas","setImageExt","setOriginFile","OriginFile","ImageSrc","setImageSrc","imageMaxSize","acceptedFileTypes","acceptedFileTypesArray","item","trim","verifyFile","files","currentFile","currentFileType","size","includes","crop","onImageLoaded","onComplete","canvasRef","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","getCroppedImg","makeClientCrop","onDrop","rejectedFiles","file","reader","FileReader","addEventListener","myResult","readAsDataURL","multieple","maxSize","accept","getRootProps","getInputProps","marginLeft","ref","event","clearRect","TextArea","Input","Title","Typography","Category","setCategory","ProdName","setProdName","setArtist","Content","setContent","Link","setLink","Date","StartDate","setStartDate","EndDate","setEndDate","ImageExt","React","createRef","uuid","v4","a","FileName","imgSrcExt","imageData64","toDataURL","originFilename","newCroppedFile","preFilename","put","postURL","status","preImage","getURL","textAlign","ext","currentTarget","date","LikeProds","setLikeProds","MyProds","setMyProds","likeProd","myProd","EntName","setEntName","setTimeout","ArtistName","setArtistName","SingleComment","OpenReply","setOpenReply","OpenModify","setOpenModify","ReplyCommentValue","setReplyCommentValue","CommentValue","setCommentValue","onClickReplyOpen","variables","responseTo","refreshFunction","onModifySubmit","actions_owner","actions_general","actions","deleted","author","avatar","modified","wrap","col","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","Comment","commentValue","setcommentValue","number","commentLists","Prod","setProd","Comments","setComments","setMainImage","PreImage","setPreImage","DDay","setDDay","User","setUser","today","moment","format","originName","preName","mainImage","endDate","diff","alignContent","artistId","maxHeight","objectFit","mainImagePath","link","rank","Artist","OnDrop","setOnDrop","MainImagePath","setMainImagePath","PreImagePath","setPreImagePath","startDate","onDropClick","selected","StartId","setStartId","EndId","setEndId","infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","o","minFunc","removeEventListener","NoticeGrid","notice","Notice","setNotice","justifyItems","whiteSpace","TitleName","setTitleName","Footer","Value","setValue","info","authCode","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LandingPage","AuthEmailPage","LoginPage","RegisterPage","UploadPage","MyPage","EntUploadPage","ArtistUploadPage","ProdDetailPage","ArtistDetailPage","ProdModifyPage","NewProdPage","RankingPage","PolicyPage","NoticePage","NoticeModifyPage","NoticeDetailPage","UploadNoticePage","Boolean","location","hostname","rootReducer","combineReducers","action","register","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad96fedf.chunk.js","sourcesContent":["export const LOGIN_USER = \"login_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const REGISTER_USER = \"register_user\";\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { message } from 'antd';\nimport { auth } from '../_actions/user_action'\n\nexport default function (SpecificComponent, option, adminRoute, allowLevel) {\n    //null => 아무나 출입 가능\n    //true => 로그인한 유저만 출입 가능\n    //false => 로그인한 유저는 출입 불가능\n\n\n    function AuthenticationCheck (props) {\n\n        const dispatch = useDispatch();\n        const [Ok, setOk] = useState(false)\n\n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                //로그인 하지 않은 상태\n                if(!response.payload.isAuth) {\n                    localStorage.removeItem('userId')\n                    if(option) {\n                        message.warn('로그인 한 유저만 접근 가능한 페이지입니다.')\n                        props.history.push('/login')\n                    }\n                } else {\n                    //로그인 한 상태\n                    if(response.payload.level == 1) {\n                        message.warn('이메일 인증을 진행해주세요.')\n                        props.history.push('/authEmail')\n                    }\n                    if (allowLevel && response.payload.level !== allowLevel) {\n                        message.error('잘못된 접근입니다.')\n                        props.history.push('/')\n                    }\n                    if(adminRoute && !response.payload.isAdmin) {\n                            message.warn('관리자만 접근 가능한 페이지 입니다.')\n                            props.history.push('/')\n                    }\n                    if (option === false && option !== null) {\n                        message.warn('로그인 한 유저는 접근 불가능한 페이지 입니다.')\n                        props.history.push('/')\n                    } \n                }\n                setOk(!Ok)\n            })\n         }, [])\n\n        return (\n            Ok ? \n            <SpecificComponent />:<div></div>\n        )\n    }\n    return AuthenticationCheck\n}","import {\n    LOGIN_USER,\n    AUTH_USER,\n    REGISTER_USER\n} from './types'\nimport axios from 'axios'\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post('/api/user/login', dataToSubmit)\n        .then(response => response.data)\n        \n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get('/api/user/auth')\n        .then(response => response.data)\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post('/api/user/register', dataToSubmit)\n        .then(response => response.data)\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}","import React, { useEffect, useState } from 'react'\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Axios from 'axios';\nimport { message } from 'antd';\n\nfunction MainImage(props) {\n    \n    const [Banner, setBanner] = useState([])\n    const [Page, setPage] = useState(0)\n\n    useEffect(() => {\n        Axios.get('/api/prod/best/0')\n            .then(response => {\n                if(response.data.success) {\n                    setBanner(response.data.result)\n                } else {\n                    message.warning('배너 정보를 가져오지 못했습니다.')\n                }\n            })\n    }, [])\n    \n    console.log(Banner)\n    const settings = {\n        beforeChange: (current, next) => setPage(next),\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplaySpeed: 3000,\n        autoplay:true,\n        arrows:true\n      };\n    return (\n        <div style={{ width: '100%', height: '400px' }}>\n            <Slider {...settings}>\n                {Banner && Banner.map((banner, index) => (\n                    <div key={index} style={{ width: '100%', height: '100%' }}>\n                    <a href={`/prod/${banner._id._id}`}>\n                        <div style={{ background: `linear-gradient(to bottom, rgba(0,0,0,0)\n                        30%,rgba(0,0,0,0)\n                        50%,rgba(0,0,0,0.65)\n                        100%),\n                        url('${banner._id.preImagePath}'), #1c1c1c`,\n                            height: '400px',\n                            backgroundSize: 'cover',\n                            backgroundRepeat: 'no-repeat',\n                            backgroundPosition: 'center',\n                            width: '100%',\n                            position: 'relative',\n                            zIndex: -1\n                        }}>\n                            <div style={{ display: 'flex', justifyContent: 'center', width: '100%', height: '100%', position: 'absolute', zIndex: 1, backdropFilter: 'blur(15px)' }}>\n                                <img src={banner._id.preImagePath} style={{ maxWidth: '100%', height: '100%' }} />\n                            </div>\n                            <div style={{ position: 'relative', width: '30%', height: '100px', top: '250px', left: '50px', zIndex: 1 }}>\n                                <h2 style={{ color: 'white', fontSize: '30px', fontWeight: '500' }}> {banner._id.name} </h2>\n                                <p style={{ color: 'white', fontSize: '15px' }}>{banner._id.content}</p>\n                            </div>\n                            <div style={{ width: '20%', height: '2px', backgroundColor: 'grey', marginTop: '0.3rem', position: 'absolute', top: '360px', left: '50px', zIndex: 1 }}>\n                                <div style={{ width : `${100*((Page+1)/Banner.length)}%`, backgroundColor: 'white', height: '100%', position: 'relative' }} />\n                            </div>\n                        </div>\n                    </a>\n                    </div>\n                ))\n                }\n            </Slider>\n        </div>\n    )\n}\n\nexport default MainImage\n","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon } from 'antd'\nimport Axios from 'axios'\n\nfunction Like(props) {\n    let variable = { }\n    if (props.prodId) { variable = { prodId: props.prodId, userId: props.userId } }\n    if (props.noticeId) { variable = { noticeId: props.noticeId, userId: props.userId } }\n    if (props.commentId) { variable.commentId = props.commentId }\n\n    const [Likes, setLikes] = useState(0)\n    const [LikeAction, setLikeAction] = useState(null)\n\n    useEffect(() => {\n        \n        Axios.get('/api/like/', { params: variable })\n            .then(response => {\n                if(response.data.success) {\n                    setLikes(response.data.result.length)\n                    response.data.result.map(like => {\n                        if(like.userId === variable.userId) {\n                            setLikeAction('liked')\n                        }\n                    })\n                } else {\n                    alert('좋아요 정보를 가져오는데 실패했습니다.')\n                }\n            })\n        \n    }, [Likes])\n\n    const onLike = () => {\n        if(props.userId) {\n            if(LikeAction === null) {\n                Axios.post('/api/like/', variable)\n                    .then(response => {\n                        if(response.data.success) {\n                            setLikes(Likes + 1)\n                            setLikeAction('liked')\n                        } else {\n                            alert('좋아요 반영에 실패했습니다.')\n                        }\n                    })\n            } else {\n                Axios.delete('/api/like/', {params: variable})\n                    .then(response => {\n                        if(response.data.success) {\n                            setLikes(Likes - 1)\n                            setLikeAction(null)\n                        } else {\n                            alert('좋아요 취소 반영에 실패했습니다.')\n                        }\n                    })\n            }\n        }\n    }\n\n    return (\n        <div>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon type=\"like\"\n                        theme={LikeAction === 'liked' ? \"filled\" : \"outlined\"}\n                        onClick={onLike}\n                    />\n                </Tooltip>\n            <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Likes} </span>\n            </span>\n        </div>\n    )\n}\n\nexport default Like\n","import React from 'react'\nimport { Col, Tooltip } from 'antd'\nimport Like from './Like'\nimport { CommentOutlined } from '@ant-design/icons'\n\nfunction GridCards(props) {\n    return (\n        <Col lg={6} md={8} xs={24}>\n            <div style={{ position: 'relative' }}>\n                <a href={`/prod/${props.prodId}`}>\n                    <img style={{ width: '100%', height: '100%' }} src={props.image} alt={props.prodName}/>\n                </a>\n            </div>\n            {props.landing ?\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                <Like\n                    prodId={props.prodId}\n                    userId={props.userId}\n                />\n                <div>\n                    <span key=\"comment\">\n                        <Tooltip title=\"comment\">\n                            <CommentOutlined />\n                        </Tooltip>\n                        <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {props.comment} </span>\n                    </span>\n                </div>\n            </div>\n            :null}\n        </Col>\n    )\n}\n\nexport default GridCards\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios'\nimport { Row } from 'antd'\nimport MainImage from './Sections/MainImage'\nimport GridCards from '../commons/GridCards'\n// import Modal from '../commons/Modal'\n\nfunction LandingPage(props) {\n\n    const user = localStorage.getItem('userId')\n    const [BestProds, setBestProds] = useState([])\n    const [MainProd, setMainProd] = useState([])\n    const [Prods, setProds] = useState([])\n\n    useEffect(() => {\n        Axios.get('/api/prod/best/0')\n            .then(response => {\n                console.log(response.data)\n                setBestProds(response.data.result)\n                setMainProd(response.data.result[0]._id)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.get(`/api/prod/`,{ params: { startId: 0, endId: 0 } })\n            .then(response => {\n                console.log(response.data)\n                setProds(response.data.result)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    return (\n        <div style={{ width: '100%', margin: '0', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            {MainProd &&\n                <MainImage\n                    image={`${MainProd.preImagePath}`}\n                    title={MainProd.name}\n                    text={MainProd.content}\n                    prodId={MainProd._id}\n                />\n            }\n            {/* 하단 전체 */}\n            <div style={{ width: '100%', height: '100%', margin: '1rem auto', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                {/* 내부 박스 1 */}\n                <div style={{ display: 'flex', width: '80%', borderRadius: '1rem', alignItems: 'center', flexDirection: 'column' }}>\n                    {/* 내부 박스 아이템 */}\n                    <div style={{ display: 'inline-block', width: '90%', marginBottom: '2rem', marginTop: '1rem', alignItems: 'center' }} >\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <text style={{ color: 'black', fontSize: '18px', fontWeight: 'bold' }}> 인기있는 굿즈 </text>\n                            <a style={{ color: 'grey' }} href='/ranking'> 더보기 </a>\n                        </div>\n                        <div style={{ backgroundColor: 'grey', width: '100%', height: '1px', marginTop: '0.5rem', marginBottom: '0.5rem' }}/>\n                        <Row gutter={[16, 16]} type=\"flex\" style={{ alignItems: 'center' }}>\n                            {BestProds && BestProds.map((prod, index) => (\n                                <React.Fragment key={index}>\n                                    <GridCards\n                                        landing\n                                        image={`${prod._id.preImagePath}`}\n                                        prodId={prod._id._id}\n                                        prodName={prod._id.name}\n                                        userId={user}\n                                        comment={prod.comment.length}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </Row>\n                    </div>\n                </div>\n                <div style={{ backgroundColor: 'whitesmoke', width: '100%', height: '0.5px', marginTop: '1rem', marginBottom: '1rem' }} />\n                <div style={{ display: 'flex', width: '80%', borderRadius: '1rem', alignItems: 'center', flexDirection: 'column' }}>\n                    {/* 내부 박스 아이템 */}\n                    <div style={{ display: 'inline-block', width: '90%', marginBottom: '2rem', marginTop: '1rem', alignItems: 'center' }} >\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                            <text style={{ color: 'black', fontSize: '18px', fontWeight: 'bold' }}> 새로운 굿즈 </text>\n                            <a style={{ color: 'grey' }} href='/newProd'> 더보기 </a>\n                        </div>\n                        <div style={{ backgroundColor: 'grey', width: '100%', height: '1px', marginTop: '0.5rem', marginBottom: '0.5rem' }}/>\n                        <Row gutter={[16, 16]} type=\"flex\" style={{ alignItems: 'center' }}>\n                            {Prods && Prods.map((prod, index) => (\n                                <React.Fragment key={index}>\n                                    <GridCards\n                                        landing\n                                        image={`${prod.preImagePath}`}\n                                        prodId={prod._id}\n                                        prodName={prod.name}\n                                        userId={user}\n                                        comment={prod.comment.length}\n                                    />\n                                </React.Fragment>\n                            ))}\n                        </Row>\n                    </div>\n                </div>\n                <div style={{ backgroundColor: 'whitesmoke', width: '100%', height: '0.5px', marginTop: '1rem', marginBottom: '1rem' }} />\n                <div style={{ display: 'flex', width: '80%', borderRadius: '1rem', alignItems: 'center', flexDirection: 'column' }}>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default withRouter(LandingPage)\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../../../_actions/user_action'\nimport { withRouter } from 'react-router-dom'\n\nfunction LoginPage(props) {\n\n    const dispatch = useDispatch();\n\n    const [values, setValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {\n        email,\n        password\n    } = values;\n    \n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n\n    const onSubmitHandler = (e) => {\n\n        e.preventDefault();\n\n        let body ={\n            email: email,\n            password: password\n        }\n\n        dispatch(loginUser(body))\n            .then(response => {\n                if (response.payload.loginSuccess){\n                    window.localStorage.setItem('userId', response.payload.userId)\n                    props.history.push('/')\n                } else {\n                    alert('로그인에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width: '100%',\n            height: '100vh' }}>\n            <form style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                width: '440px',\n                height: '70vh',\n                justifyContent: 'center',\n            }}\n            onSubmit={onSubmitHandler}>\n                {/* logo */}\n                <div style={{\n                    width: '140px',\n                    height: '140px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffdf80',\n                    marginBottom: '50px'\n                }}>\n                    <div style={{\n                    width: '100px',\n                    height: '100px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffffff',\n                    margin: '10px 0px 20px 50px'\n                }} />\n\n                </div>\n                {/* logo */}\n                <input\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)',\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 입력하세요\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)'\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    style={{\n                        maxWidth: '300px',\n                        minWidth: '240px',\n                        height: '40px',\n                        margin: '20px',\n                        backgroundColor: '#ffdf80',\n                        border: 'none',\n                        outline: 'none',\n                        borderRadius: '5px',\n                        boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\n                        border: '1px solid rgba(0,0,0,0.02)',\n                        fontWeight: '800',\n                        color: 'white'\n                    }}>\n                        로그인\n                </button>\n                                {/* icons */}\n            <div style={{\n                width: '200px',\n                height: '100px',\n                display: 'flex',\n                justifyContent:'space-between',\n                alignItems: 'center',\n                marginBottom: '10px'\n            }}>\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ccffcc'\n                }} />\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#cce6ff'\n                }} />\n\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#f2ccff'\n                }} />\n            </div>\n            {/* icons */}\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(LoginPage)\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { registerUser } from '../../../_actions/user_action'\nimport { withRouter } from 'react-router-dom'\nimport { message } from 'antd'\nimport Axios from 'axios'\n\nfunction RegisterPage(props) {\n    const dispatch = useDispatch();\n    \n    const [values, setValues] = useState({\n        id: \"\",\n        email: \"\",\n        password: \"\",\n        passwordCheck: \"\"\n    });\n    const [EmailDup, setEmailDup] = useState(false)\n    const [NameDup, setNameDup] = useState(false)\n\n    const {\n        id,\n        email,\n        password,\n        passwordCheck\n    } = values;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n        if (value != \"\") checkDup(value, name)\n        else {\n            setNameDup(false)\n            setEmailDup(false)\n        }\n    };\n\n    const checkDup = (value, type) => {\n        let params = {}\n        if (type == 'id') { params = { id: value } }\n        if (type == 'email') { params = { email: value } }\n\n        Axios.get(`api/user/dup`, { params: params })\n            .then(response => {\n                if (response.data.result == 'success') {\n                    if (type == 'id') setNameDup(false)\n                    if (type == 'email') setEmailDup(false)\n                } else {\n                    if (type == 'id') setNameDup(true)\n                    if (type == 'email') setEmailDup(true)\n                }\n            })\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        if(password !== passwordCheck) {\n            return message.warning('비밀번호와 비밀번호 확인은 같아야합니다.')\n        }\n        else if (NameDup || EmailDup) {\n            return message.warning('닉네임 또는 이메일이 중복됩니다.')\n        } else {\n            let body = {\n                name: id,\n                email: email,\n                password: password\n            }\n\n            dispatch(registerUser(body))\n                .then(response => {\n                    if (response.payload.success){\n                        message.success('회원가입이 완료되었습니다.')\n                        props.history.push('/login')\n                    } else {\n                        alert('Error')\n                    }\n                })\n        }\n    }\n    \n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width: '100%',\n            height: '100vh' }}>\n            <form style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                width: '440px',\n                height: '70vh',\n                justifyContent: 'center',\n            }}\n            onSubmit={onSubmitHandler}>\n                {/* logo */}\n                <div style={{\n                    width: '140px',\n                    height: '140px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffdf80',\n                    marginBottom: '50px'\n                }}>\n                    <div style={{\n                    width: '100px',\n                    height: '100px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffffff',\n                    margin: '10px 0px 20px 50px'\n                }} />\n\n                </div>\n                {/* logo */}\n                <input\n                    type=\"text\"\n                    placeholder=\"닉네임을 입력하세요\"\n                    name=\"id\"\n                    value={id}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: `${NameDup ? '1px solid rgba(255,0,0,255)' : '1px solid rgba(0,0,0,0.2)'}`,\n                    }}\n                />\n                {NameDup &&\n                    <span style={{ color: 'red' }}>이미 사용 중인 닉네임 입니다.</span>\n                }\n                <input\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: `${EmailDup ? '1px solid rgba(255,0,0,255)' : '1px solid rgba(0,0,0,0.2)'}`,\n                    }}\n                />\n                {EmailDup &&\n                    <span style={{ color: 'red' }}>이미 가입된 이메일 입니다.</span>\n                }\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 입력하세요\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    minLength={6}\n                    maxLength={12}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)',\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 한 번 더 입력하세요\"\n                    name=\"passwordCheck\"\n                    value={passwordCheck}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)',\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    style={{\n                        maxWidth: '300px',\n                        minWidth: '240px',\n                        height: '40px',\n                        margin: '20px',\n                        backgroundColor: '#ffdf80',\n                        border: 'none',\n                        outline: 'none',\n                        borderRadius: '5px',\n                        boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\n                        border: '1px solid rgba(0,0,0,0.02)',\n                        fontWeight: '800',\n                        color: 'white'\n                    }}>\n                        회원가입하기\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(RegisterPage)\n","import React, { useState, useEffect } from 'react'\nimport { Menu } from 'antd'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux'\nconst SubMenu = Menu.SubMenu\n\nfunction LeftMenu(props) {\n    \n    const user = useSelector(state => state.user)\n    const userId = localStorage.getItem('userId')\n    const [User, setUser] = useState(null)\n\n        // useEffect(() => {\n        //     if (userId){\n        //     Axios.get(`/api/user/info/${userId}`)\n        //         .then(response => {\n        //             if(response.data.success) {\n        //                 console.log(response.data.result)\n        //                 setUser(response.data.result)\n        //             } else {\n        //                 alert('사용자 정보를 가져오는데 실패했습니다.')\n        //             }\n        //         })\n        //     } else {\n        //         setUser(null)\n        //     }\n        // }, [])\n\n\n        const MenuLogin = () => {\n            return (\n                <Menu mode={props.mode}>\n                    <Menu.Item key=\"mail\">\n                        <a href=\"/notice\" style={{ fontWeight: 'bold' }}>공지사항</a>\n                    </Menu.Item>\n                    {user.userData && user.userData.isAdmin ?\n                    <SubMenu title={<span>업로드</span>} style={{ fontWeight: 'bold' }}>\n                        <Menu.Item key=\"mail\">\n                            <a href=\"/upload\">업로드</a>\n                        </Menu.Item>\n                        <Menu.Item key=\"mail\">\n                            <a href=\"/uploadEnt\">엔터 업로드</a>\n                        </Menu.Item>\n                        <Menu.Item key=\"mail\">\n                            <a href=\"/uploadArtist\">아티스트 업로드</a>\n                        </Menu.Item>\n                    </SubMenu>\n                    :\n                    <SubMenu title={<span>업로드</span>}>\n                        <Menu.Item key=\"mail\">\n                            <a href=\"/upload\">업로드</a>\n                        </Menu.Item>\n                    </SubMenu>\n                    }\n                </Menu>\n            )\n        }\n\n        const MenuNotLogin = () => {\n            return (\n                <Menu mode={props.mode}>\n                    <Menu.Item key=\"mail\">\n                        <a href=\"/notice\" style={{ fontWeight: 'bold' }}>공지사항</a>\n                    </Menu.Item>\n                </Menu>\n            )\n        }\n\n\n        if (user.userData && user.userData.isAuth) {\n            return (\n                <MenuLogin />\n            )\n        } else {\n            return (\n                <MenuNotLogin />\n            )\n        }\n}\n\nexport default LeftMenu\n","import React, { useState, useEffect } from 'react'\nimport { Menu } from 'antd'\nimport { useSelector } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios'\n\nconst { SubMenu } = Menu;\n\nfunction RightMenu(props) {\n    const user = useSelector(state => state.user)\n\n    const [Artists, setArtists] = useState([])\n    const [Ents, setEnts] = useState([])\n\n    useEffect(() => {\n        Axios.get('/api/ent/')\n            .then(response => {\n                if(response.data.success) {\n                    setEnts(response.data.result)\n                } else {\n                    alert('엔터 정보를 가져오는데 실패했습니다.')\n                }\n            })\n\n        Axios.get('/api/artist/')\n            .then(response => {\n                if(response.data.success) {\n                    setArtists(response.data.result)\n                } else {\n                    alert('아티스트 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n\n    const logoutHandler = () => {\n        Axios.get('/api/user/logout')\n            .then(response => {\n                if(response.data.success) {\n                    localStorage.removeItem('userId')\n                    props.history.push(\"/login\")\n                } else {\n                    alert('로그아웃에 실패했습니다.')\n                }\n            })\n    }\n    \n    if(user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\" style={{ fontWeight: 'bold' }}>로그인</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\" style={{ fontWeight: 'bold' }}>회원가입</a>\n                </Menu.Item>\n            </Menu>\n        )\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <SubMenu key=\"artist\" title=\"아티스트\" style={{ fontWeight: 'bold' }}>\n                    {Ents && Artists &&\n                        Ents.map((ent, index) => (\n                            <SubMenu key={index} title={ent.name}>\n                                {\n                                    Artists.map((artist, aindex) => {\n                                        if (artist.entId === ent._id) {\n                                            return (\n                                            <Menu.Item key={`artsit${aindex}`}>\n                                                <a href={`/artist/${artist._id}`}>\n                                                    {artist.name}\n                                                </a>\n                                            </Menu.Item>\n                                            )\n                                        }\n                                    })\n                                }\n                            </SubMenu>\n                        ))    \n                    }\n                </SubMenu>\n                <Menu.Item key=\"upload\">\n                    <a href=\"/mypage\" style={{ fontWeight: 'bold' }}>마이페이지</a>\n                </Menu.Item>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler} style={{ fontWeight: 'bold' }}>로그아웃</a>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(RightMenu)\n","export default __webpack_public_path__ + \"static/media/ducku512.661178c6.png\";","import React, { useState } from 'react';\nimport { Drawer, Button, Icon } from 'antd';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport './Sections/Navbar.css'\nimport Logo from '../commons/ducku512.png'\n\nfunction NavBar() {\n\n    const [Visible, setVisible] = useState(false)\n\n    const showDrawer = () => {\n        setVisible(true)\n    }\n\n    const onClose = () => {\n        setVisible(false)\n    }\n\n\n    return (\n        <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n            <div className=\"menu__logo\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', height: '68px' }}>\n                <a style={{ fontWeight: 'bold', fontSize: '20px', color: '#FFB641' }} href=\"/\">\n                    <img src={Logo} alt=\"더쿠아이콘\" style={{ width: '48px', height: '48px', marginRight: '1rem', padding: 'auto' }} />\n                    <span>지덕체</span>\n                </a>\n            </div>\n            <div className=\"menu__container\">\n                <div className=\"menu_left\">\n                    <LeftMenu mode=\"horizontal\" />\n                </div>\n                <div className=\"menu_right\">\n                    <RightMenu mode=\"horizontal\" />\n                </div>\n                <Button\n                    className=\"menu__mobile-button\"\n                    type=\"primary\"\n                    onClick={showDrawer}\n                >\n                    <Icon type=\"align-right\" />\n                </Button>\n                <Drawer\n                    title=\"Basic Drawer\"\n                    placement=\"right\"\n                    className=\"menu_drawer\"\n                    closable={false}\n                    onClose={onClose}\n                    visible={Visible}\n                >\n                    <LeftMenu mode=\"inline\" />\n                    <RightMenu mode=\"inline\" />\n                </Drawer>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar\n","export function downloadBase64File(base64Data, filename) {\n    var element = document.createElement('a');\n    element.setAttribute('href', base64Data);\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\nexport function base64StringtoFile(base64String, filename) {\n    var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n}\n\nexport function extractImageFileExtensionFromBase64(base64Data){\n    return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\"))\n}\n\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop){\n    const canvas = canvasRef // document.createElement('canvas');\n    canvas.width = pixelCrop.width;\n    canvas.height = pixelCrop.height;\n    const ctx = canvas.getContext('2d');\n    const image = new Image()\n    image.src = image64\n    image.onload = function() {\n        ctx.drawImage(\n          image,\n          pixelCrop.x,\n          pixelCrop.y,\n          pixelCrop.width,\n          pixelCrop.height,\n          0,\n          0,\n          pixelCrop.width,\n          pixelCrop.height\n        )\n    }\n}\n\nexport function getCroppedImg(canvasRef, image, crop) {\n    const canvas = canvasRef\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n}","import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { Icon } from 'antd'\n\n\nimport {\n    extractImageFileExtensionFromBase64,\n    getCroppedImg\n} from '../../../../utils/ReusableUtils'\n\nfunction DropAndCrop(props) {\n\n    const [Crop, setCrop] = useState({aspect: 1/1, x:0, y:0, width:100,height:100, unit:'px'})\n    const [ImageRef, setImageRef] = useState(null)\n    const imagePreviewCanvasRef = props.canvas\n    const setImageExt = props.setImageExt\n    const OriginFile = props.OriginFile\n    const setOriginFile = props.setOriginFile\n    const ImageSrc = props.ImageSrc\n    const setImageSrc = props.setImageSrc\n\n    const imageMaxSize = 5 * 1024 * 1024\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {return item.trim()})\n\n    const verifyFile = (files) => {\n        if(files && files.length > 0) {\n            const currentFile = files[0]\n            const currentFileType = currentFile.type\n            const currentFileSize = currentFile.size\n            if(currentFileSize > imageMaxSize) {\n                alert('이 파일은 너무 큽니다. ' + imageMaxSize/1024/1024 + 'MB이하의 파일만 가능합니다')//maxsize 알려주기\n                return false\n            }\n            if(!acceptedFileTypesArray.includes(currentFileType)){\n                alert('이 파일은 지원하지 않습니다.')\n                return false\n            }\n            return true\n        }\n    }\n\n    const onDrop = (files, rejectedFiles) => {\n        if(rejectedFiles && rejectedFiles.length > 0) {\n            verifyFile(rejectedFiles)\n        }\n        if(files && files.length > 0) {\n            const isVerified = verifyFile(files)\n            if(isVerified) {\n                const file = setOriginFile(files[0])\n                const reader = new FileReader()\n                reader.addEventListener(\"load\", () => {\n                    const myResult = reader.result\n                    setImageSrc(myResult)\n                    setImageExt(extractImageFileExtensionFromBase64(myResult))\n                }, false)\n                reader.readAsDataURL(file)\n            }\n        }        \n    }\n\n    const handleClearToDefault = (event) =>  {\n        if(event) event.preventDefault()\n        const canvas = imagePreviewCanvasRef.current\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n        setImageSrc(null)\n        setImageExt(null)\n        setCrop({aspect: 1/1, x:0, y:0, width:100,height:100, unit:'px'})\n    }\n\n    const makeClientCrop = (crop) => {\n        const canvasRef = imagePreviewCanvasRef.current\n        if (ImageRef && crop.width && crop.height) {\n            getCroppedImg(\n            canvasRef,\n            ImageRef,\n            crop\n          );\n        }\n    }\n\n    const handleOnCropChange = (crop) => {\n        setCrop(crop)\n    }\n\n    const handleImageLoaded = (image) => {\n        setImageRef(image)\n    }\n\n    const handleOnCropComplete = (crop) => {\n        makeClientCrop(crop)\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n           {ImageSrc !== null ?\n            <div style={{ width: '300px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <ReactCrop\n                    src={ImageSrc}\n                    crop={Crop}\n                    onImageLoaded={handleImageLoaded}\n                    onComplete={handleOnCropComplete}\n                    onChange={handleOnCropChange} />\n            </div>\n            :\n            <Dropzone\n                onDrop={onDrop}\n                multieple={false}\n                maxSize={imageMaxSize}\n                accept={acceptedFileTypes}>\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                    </div>\n                )}\n            </Dropzone>}   \n            {\n                <div style={{ marginLeft: '3rem', width: '300px'}}>\n                    <p>Preview Canvas Crop</p>\n                    <canvas ref={imagePreviewCanvasRef}/>\n                    <button onClick={handleClearToDefault}>Clear</button>\n                </div>\n            } \n        </div>\n    )\n}\n\nexport default DropAndCrop\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input } from 'antd'\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport DropAndCrop from './Section/DropAndCrop';\nimport {\n    base64StringtoFile\n} from '../../../utils/ReusableUtils'\nimport { v4 } from 'uuid'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction UploadPage(props) {\n        const user = useSelector(state => state.user);\n        \n        const [Category, setCategory] = useState(\"\")\n        const [ProdName, setProdName] = useState(\"\");\n        const [Artists, setArtist] = useState([])\n        const [Content, setContent] = useState(\"\");\n        const [Link, setLink] = useState(\"\");\n        const [StartDate, setStartDate] = useState(new Date());\n        const [EndDate, setEndDate] = useState(new Date())\n\n        const [OriginFile, setOriginFile] = useState(null);\n        const [ImageSrc, setImageSrc] = useState(null)\n        const [ImageExt, setImageExt] = useState(null)\n        const imagePreviewCanvasRef = React.createRef()\n\n        const uuid = v4();\n\n        useEffect(() => {\n            Axios.get('/api/artist/')\n                .then(response => {\n                    if (response.data.success) {\n                        setArtist(response.data.result);\n                        setCategory(response.data.result[0]);\n                    } else {\n                        alert('아티스트 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n        }, [])\n\n        async function onSubmit (e) {\n            e.preventDefault();\n            const imgSrc = ImageSrc\n            const FileName = ProdName\n\n            if(imgSrc) {\n                const canvasRef = imagePreviewCanvasRef.current\n                const imgSrcExt = ImageExt\n                const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt)\n                const originFilename = FileName + '.' + imgSrcExt\n                const preFilename = FileName + \"_preview.\" + imgSrcExt\n                const newCroppedFile = base64StringtoFile(imageData64, preFilename)\n\n                let image = await Axios.post('/api/prod/getUrl', {name: uuid + originFilename})\n                    .then(response => {\n                            return (response.data.result)\n                    })\n                Axios.put(image.postURL, OriginFile)\n                    .then(response => {\n                        console.log(response)\n                        if(response.status !== 200) {\n                            alert('이미지 업로드에 실패했습니다.')\n                        }\n                    })\n                let preImage = await Axios.post('/api/prod/getPreUrl', {name: uuid + preFilename})\n                    .then(response => {\n                            return (response.data.result)\n                    })\n\n                Axios.put(preImage.postURL, newCroppedFile)\n                    .then(response => {\n                        console.log(response)\n                        if(response.status !== 200) {\n                            alert('이미지 업로드에 실패했습니다.')\n                        }\n                    })\n                    \n                const variable = {\n                    'userId': user.userData._id,\n                    'name': ProdName,\n                    'artistId': Category,\n                    'link': Link,\n                    'mainImage': image.filename,\n                    'preImage': preImage.filename,\n                    'mainImagePath': image.getURL,\n                    'preImagePath': preImage.getURL,\n                    'startDate': StartDate,\n                    'endDate': EndDate,\n                    'content': Content\n                }\n\n                Axios.post('/api/prod/', variable)\n                    .then(response => {\n                        if (response.data.success) {\n                            message.success('성공적으로 업로드를 완료했습니다.')\n                            props.history.push('/')\n                        } else {\n                            alert('데이터 저장에 실패했습니다.')\n                        }\n                    })\n                }\n        }\n        \n        const onNameChange = (e) => {\n            setProdName(e.currentTarget.value)\n        }\n\n        const onContentChange = (e) => {\n            setContent(e.currentTarget.value)\n        }\n\n        const onCategoryChange = (e) => {\n            setCategory(e.currentTarget.value)\n        }\n\n        const onLinkChange = (e) => {\n            setLink(e.currentTarget.value)\n        }\n\n        const refreshOriginFile = (file) => {\n            setOriginFile(file)\n            return file\n        }\n\n        const refreshImageSrc = (src) => {\n            setImageSrc(src)\n        }\n\n        const refreshImageExt = (ext) => {\n            setImageExt(ext)\n        }\n\n        const onStartDateChange = (date) => {\n            if(date > EndDate) {\n                alert(\"펀딩 시작일은 종료일 이후일 수 없습니다.\")\n            } else {\n                setStartDate(date)\n            }\n        }\n\n        const onEndDateChange = (date) => {\n            if(date < StartDate) {\n                alert(\"펀딩 종료일은 시작일보다 이전일 수 없습니다.\")\n            } else {\n                setEndDate(date)\n            }\n        }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Prod Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <DropAndCrop\n                    OriginFile={OriginFile} setOriginFile={refreshOriginFile}\n                    ImageSrc={ImageSrc} setImageSrc={refreshImageSrc}\n                    setImageExt={refreshImageExt}\n                    canvas={imagePreviewCanvasRef}/>\n                <br />\n                <br />\n\n\n                <label>상품 이름</label>\n                <Input\n                    onChange={onNameChange}\n                    value={ProdName}\n                />\n                <br />\n                <br />\n\n\n                <label>내용</label>\n                <TextArea\n                    onChange={onContentChange}\n                    value={Content}\n                />\n                <br />\n                <br />\n\n\n                <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                    <div style={{ marginLeft: '1rem', width: '45%' }}>\n                        <label>펀딩 시작일</label>\n                        <Calendar\n                            onChange={onStartDateChange}\n                            value={StartDate}\n                        />\n                    </div>\n                    <div style={{ marginRight: '1rem', width: '45%' }}>\n                        <label>펀딩 종료일</label>\n                        <Calendar\n                            onChange={onEndDateChange}\n                            value={EndDate}\n                        />\n                    </div>\n                </div>\n                <br />\n                <br />\n\n\n                <label>링크</label>\n                <TextArea\n                    onChange={onLinkChange}\n                    value={Link}\n                />\n                <br />\n                <br />\n\n\n                <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                    {Artists.map((artist, index) => (\n                        <option key={index} value={artist._id}>{artist.name}</option>\n                    ))}\n                </select>\n                <br />\n                <br />\n\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(UploadPage)\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport GridCards from '../commons/GridCards';\nimport { Row } from 'antd';\nimport { withRouter } from 'react-router-dom';\n\nfunction MyPage() {\n\n    const [LikeProds, setLikeProds] = useState([])\n    const [MyProds, setMyProds] = useState([])\n\n    const user = localStorage.getItem('userId')\n\n    useEffect(() => {\n        Axios.get(`/api/prod/myLike/${user}`)\n            .then(response => {\n                if (response.data.success) {\n                    setLikeProds(response.data.result)\n                } else {\n                    alert('좋아요 목록을 가져오는데 실패했습니다.')\n                }\n            })\n        \n        Axios.get(`/api/prod/my/${user}`)\n            .then(response => {\n                if (response.data.success) {\n                    setMyProds(response.data.result)\n                } else {\n                    alert('나의 게시물을 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 내가 좋아하는 굿즈 </h2>\n                <hr />\n                <Row gutter = {[16, 16]} type=\"flex\" style={{ alignItems: 'center'}} >\n                    {LikeProds && LikeProds.map((likeProd, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    landing\n                                    userId={user}\n                                    image={`${likeProd.prodId.preImagePath}`}\n                                    prodId={likeProd.prodId._id}\n                                    prodName={likeProd.prodId.name}\n                                    comment={likeProd.comment.length}\n                                /> \n                            </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 내가 올린 굿즈 </h2>\n                <hr />\n                <Row gutter = {[16, 16]} type=\"flex\" style={{ alignItems: 'center'}} >\n                    {\n                        MyProds && MyProds.map((myProd, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    landing\n                                    userId={user}\n                                    image={`${myProd.preImagePath}`}\n                                    prodId={myProd._id}\n                                    prodName={myProd.name}\n                                    comment={myProd.comment.length}\n                                />\n                            </React.Fragment>\n                        ))}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(MyPage)\n","import React, { useEffect } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nimport { v4 } from 'uuid'\nimport {\n    extractImageFileExtensionFromBase64,\n} from '../../../utils/ReusableUtils'\nimport { withRouter } from 'react-router-dom';\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction EntUploadPage(props) {\n\n    const [EntName, setEntName] = useState(\"\");\n    const [OriginFile, setOriginFile] = useState(null);\n    const [ImageSrc, setImageSrc] = useState(null)\n    const [ImageExt, setImageExt] = useState(null)\n\n    const imageMaxSize = 5 * 1024 * 1024\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {return item.trim()})\n    const uuid = v4();\n\n    const verifyFile = (files) => {\n        if(files && files.length > 0) {\n            const currentFile = files[0]\n            const currentFileType = currentFile.type\n            const currentFileSize = currentFile.size\n            if(currentFileSize > imageMaxSize) {\n                alert('이 파일은 너무 큽니다. ' + imageMaxSize/1024/1024 + 'MB이하의 파일만 가능합니다')//maxsize 알려주기\n                return false\n            }\n            if(!acceptedFileTypesArray.includes(currentFileType)){\n                alert('이 파일은 지원하지 않습니다.')\n                return false\n            }\n            return true\n        }\n    }\n\n    const onDrop = (files, rejectedFiles) => {\n        if(rejectedFiles && rejectedFiles.length > 0) {\n            verifyFile(rejectedFiles)\n        }\n        if(files && files.length > 0) {\n            const isVerified = verifyFile(files)\n            if(isVerified) {\n                const file = setOriginFile(files[0])\n                const reader = new FileReader()\n                reader.addEventListener(\"load\", () => {\n                    const myResult = reader.result\n                    setImageSrc(myResult)\n                    setImageExt(extractImageFileExtensionFromBase64(myResult))\n                }, false)\n                reader.readAsDataURL(files[0])\n            }\n        }        \n    }\n\n    async function onSubmit(e) {\n        e.preventDefault();\n        const imgSrc = ImageSrc\n        const FileName = EntName\n        \n        if(imgSrc) {\n            const imgSrcExt = ImageExt\n            const originFilename = FileName + '.' + imgSrcExt\n\n            let image = await Axios.post('/api/ent/getUrl', {name: uuid + originFilename})\n                .then(response => {\n                        return (response.data.result)\n                })\n\n            Axios.put(image.postURL, OriginFile)\n                .then(response => {\n                    console.log(response)\n                    if(response.status !== 200) {\n                        alert('이미지 업로드에 실패했습니다.')\n                    }\n                })\n\n            const variable = {\n                'name': EntName,\n                'mainImage': image.filename,\n                'mainImagePath': image.getURL,\n            }\n        \n            Axios.post('/api/ent/', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        message.success('성공적으로 업로드를 완료했습니다.')\n                        setTimeout(() => {\n                            setEntName(\"\")\n                            setOriginFile(null)\n                            setImageSrc(null)\n                            setImageExt(null)\n                        }, 1000);\n                    } else {\n                        alert('데이터 저장에 실패했습니다.')\n                    }\n                })\n            }\n    }\n    \n    const onNameChange = (e) => {\n        setEntName(e.currentTarget.value)\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Ent Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    {!ImageSrc ?\n                    <Dropzone\n                    onDrop={onDrop}\n                    multieple={false}\n                    maxSize={10000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex',\n                        alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                        </div>\n                        )}\n                    </Dropzone>:\n                    <img src={ImageSrc} style={{ width: '200px' }}/>\n                    }\n                </div>\n            <br />\n            <br />\n\n\n            <label>엔터 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={EntName}\n            />\n            <br />\n            <br />\n\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(EntUploadPage)\n","import React, { useEffect } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\nimport { v4 } from 'uuid'\nimport {\n    extractImageFileExtensionFromBase64,\n} from '../../../utils/ReusableUtils'\nimport { withRouter } from 'react-router-dom'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction ArtistUploadPage() {\n\n    const [ArtistName, setArtistName] = useState(\"\");\n    const [Ents, setEnts] = useState([]);\n    const [Category, setCategory] = useState(\"\");\n    const [OriginFile, setOriginFile] = useState(null);\n    const [ImageSrc, setImageSrc] = useState(null)\n    const [ImageExt, setImageExt] = useState(null)\n\n    const imageMaxSize = 5 * 1024 * 1024\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {return item.trim()})\n    const uuid = v4();\n\n    useEffect(() => {\n        Axios.get(`/api/ent/`)\n            .then(response => {\n                if (response.data.success) {\n                    setEnts(response.data.result)\n                } else {\n                    alert('아티스트 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    const verifyFile = (files) => {\n        if(files && files.length > 0) {\n            const currentFile = files[0]\n            const currentFileType = currentFile.type\n            const currentFileSize = currentFile.size\n            if(currentFileSize > imageMaxSize) {\n                alert('이 파일은 너무 큽니다. ' + imageMaxSize/1024/1024 + 'MB이하의 파일만 가능합니다')//maxsize 알려주기\n                return false\n            }\n            if(!acceptedFileTypesArray.includes(currentFileType)){\n                alert('이 파일은 지원하지 않습니다.')\n                return false\n            }\n            return true\n        }\n    }\n\n    const onDrop = (files, rejectedFiles) => {\n        if(rejectedFiles && rejectedFiles.length > 0) {\n            verifyFile(rejectedFiles)\n        }\n        if(files && files.length > 0) {\n            const isVerified = verifyFile(files)\n            if(isVerified) {\n                const file = setOriginFile(files[0])\n                const reader = new FileReader()\n                reader.addEventListener(\"load\", () => {\n                    const myResult = reader.result\n                    setImageSrc(myResult)\n                    setImageExt(extractImageFileExtensionFromBase64(myResult))\n                }, false)\n                reader.readAsDataURL(files[0])\n            }\n        }        \n    }\n    \n    const onNameChange = (e) => {\n        setArtistName(e.currentTarget.value)\n    }\n    const onCategoryChange = (e) => {\n        setCategory(e.currentTarget.value)\n    }\n\n    async function onSubmit(e) {\n        e.preventDefault();\n        const imgSrc = ImageSrc\n        const FileName = ArtistName\n        \n        if(imgSrc) {\n            const imgSrcExt = ImageExt\n            const originFilename = FileName + '.' + imgSrcExt\n\n            let image = await Axios.post('/api/ent/getUrl', {name: uuid + originFilename})\n                .then(response => {\n                        return (response.data.result)\n                })\n\n            Axios.put(image.postURL, OriginFile)\n                .then(response => {\n                    console.log(response)\n                    if(response.status !== 200) {\n                        alert('이미지 업로드에 실패했습니다.')\n                    }\n                })\n\n            const variable = {\n                'name': ArtistName,\n                'entId': Category,\n                'mainImage': image.filename,\n                'mainImagePath': image.getURL,\n            }\n            Axios.post('/api/artist/', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        message.success('성공적으로 업로드를 완료했습니다.')\n                        setTimeout(() => {\n                            setArtistName(\"\")\n                            setCategory(\"\")\n                            setOriginFile(null)\n                            setImageSrc(null)\n                            setImageExt(null)\n                        }, 1000);\n                    } else {\n                        alert('데이터 저장에 실패했습니다.')\n                    }\n                })\n            }\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Artist Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                {!ImageSrc ?\n                    <Dropzone\n                    onDrop={onDrop}\n                    multieple={false}\n                    maxSize={10000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex',\n                        alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                        </div>\n                        )}\n                    </Dropzone>\n                    :\n                    <img src={ImageSrc} style={{ width: '200px' }}/>\n                }\n                </div>\n            <br />\n            <br />\n\n\n            <label>아티스트 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={ArtistName}\n            />\n            <br />\n            <br />\n\n\n            <label>엔터 선택</label> <br />\n            <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                {Ents.map((ent, index) => (\n                    <option key={index} value={ent._id}>{ent.name}</option>\n                ))}\n            </select>\n            <br />\n            <br />\n\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(ArtistUploadPage)\n","import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input, message } from 'antd'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux';\nimport Like from './Like'\n\nconst { TextArea } = Input;\n\n\nfunction SingleComment(props) {\n\n\n    const user = useSelector(state => state.user)\n    const userId = localStorage.getItem('userId')\n\n    const [OpenReply, setOpenReply] = useState(false)\n    const [OpenModify, setOpenModify] = useState(false)\n    const [ReplyCommentValue, setReplyCommentValue] = useState(\"\")\n    const [CommentValue, setCommentValue] = useState(\"\")\n\n    const onClickReplyOpen = () => {\n        setOpenReply(!OpenReply)\n        if (OpenModify) {\n            setOpenModify(!OpenModify)\n        }\n    }\n\n    const onClickModify = () => {\n        setCommentValue(props.comment.content)\n        setOpenModify(!OpenModify)\n        if (OpenReply) {\n            setOpenReply(!OpenReply)\n        }\n    }\n    \n    const onClickDelete = () => {\n        Axios.delete(`/api/comment/${props.comment._id}`)\n            .then(response => {\n                if (response.data.success) {\n                    message.success('댓글 삭제에 성공했습니다.')\n                    props.refreshFunction()\n                } else {\n                    alert('댓글 삭제에 실패했습니다.')\n                }\n            })\n    }\n\n    const onHandleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n\n    const onHandleReplyChange = (e) => {\n        setReplyCommentValue(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(ReplyCommentValue !== \"\") {\n            const variables = {\n                content: ReplyCommentValue,\n                userId: user.userData._id,\n                responseTo: props.comment._id\n            }\n            if (props.prodId) { variables.prodId = props.prodId }\n            if (props.noticeId) { variables.noticeId = props.noticeId }\n\n            Axios.post('/api/comment/', variables)\n                .then(response => {\n                    if(response.data.success) {\n                        props.refreshFunction()\n                        setReplyCommentValue(\"\")\n                        setOpenReply(false)\n                    } else {\n                        alert('댓글을 저장하지 못했습니다.')\n                    }\n                })\n        }\n    }\n\n    const onModifySubmit = (e) => {\n        e.preventDefault();\n\n        if(CommentValue !== \"\") {\n            const variables = {\n                commentId: props.comment._id,\n                content: CommentValue\n            }\n            Axios.put('/api/comment/', variables)\n                .then(response => {\n                    if(response.data.success) {\n                        props.refreshFunction(response.data.result)\n                        setCommentValue(\"\")\n                        setOpenModify(false)\n                    } else {\n                        alert('댓글을 저장하지 못했습니다.')\n                    }\n                })\n        }\n    }\n\n    const actions_owner = [\n        <Like comment prodId={props.prodId} noticeId={props.noticeId} userId={localStorage.getItem('userId')} commentId={props.comment._id}/>\n        ,<span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\" style={{margin: '0 0 0 10px'}}>Reply to</span>\n        ,<span onClick={onClickModify} key=\"comment-modify\" style={{margin: '0 0 0 10px'}}>modify</span>\n        ,<span onClick={onClickDelete} key=\"comment-delete\" style={{margin: '0 0 0 10px'}}>delete</span>\n    ]\n\n    const actions_general = user.userData.isAuth ?[\n        <Like comment prodId={props.prodId} noticeId={props.noticeId} userId={localStorage.getItem('userId')} commentId={props.comment._id}/>\n        ,<span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\" style={{margin: '0 0 0 10px'}}>Reply to</span>\n    ]:[<Like comment prodId={props.prodId} noticeId={props.noticeId} userId={localStorage.getItem('userId')} commentId={props.comment._id}/>]\n\n    return (\n        <div>\n            <Comment\n                actions={(props.comment.userId._id === userId || user.userData.isAdmin) && props.comment.deleted === false ? actions_owner : actions_general}\n                author={props.comment.userId.name}\n                avatar={<Avatar src={props.comment.userId.image} alt />}\n                content={props.comment.deleted === true ? <p> (삭제된 댓글입니다.) </p>:<p> {props.comment.content} {props.comment.modified ? '(수정됨)':'' }</p>}\n            />\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit} >\n                    <TextArea wrap=\"hard\" col=\"50\"\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={onHandleReplyChange}\n                        value={ReplyCommentValue}\n                        placeholder=\"코멘트를 작성해 주세요\"\n                    />\n                    <br />\n                    <Button style={{ width: '5%', height: '50px', margin: 'auto' }} onClick={onSubmit} > Submit</Button>\n                </form>\n            }\n            {OpenModify &&\n                <form style={{ display: 'flex' }} onSubmit={onModifySubmit} >\n                    <TextArea wrap=\"hard\" col=\"50\"\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={onHandleChange}\n                        value={CommentValue}\n                        placeholder=\"코멘트를 작성해 주세요\"\n                    />\n                    <br />\n                    <Button style={{ width: '5%', height: '50px', margin: 'auto' }} onClick={onModifySubmit} > Submit</Button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default SingleComment\n","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment'\n\nfunction ReplyComment(props) {\n\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\n\n    useEffect(() => {\n        \n        let commentNumber = 0;\n        props.comment.map((comment) => {\n            if(comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.comment])\n\n    let renderReplyComment = (parentCommentId) => (\n            props.comment.map((comment, index) => (\n            <React.Fragment>\n                {\n                    comment.responseTo === parentCommentId &&\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} prodId={props.prodId} noticeId={props.noticeId} />\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} prodId={props.prodId} noticeId={props.noticeId} comment={props.comment}/>\n                    </div>\n                }\n\n            </React.Fragment>\n        )))\n\n    const onHandleChange = () => {\n        setOpenReplyComments(!OpenReplyComments)\n    }\n\n\n    return (\n        <div>\n            \n            {ChildCommentNumber > 0 && \n                <p style={{ fontSize: '12px', margin: 0, color: 'rgba(0,0,0,0.2)', marginLeft: '10px'}} onClick={onHandleChange}>\n                    View {ChildCommentNumber} more comment(s)\n                </p>\n            }\n            {OpenReplyComments &&\n                renderReplyComment(props.parentCommentId)\n            }\n        </div>\n    )\n}\n\nexport default ReplyComment\n","import React, { useState } from 'react'\nimport { Input, Button } from 'antd'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport SingleComment from './SingleComment'\nimport ReplyComment from './ReplyComment'\n\nconst { TextArea } = Input;\n\n\nfunction Comment(props) {\n\n    const user = useSelector(state => state.user)\n    const prodId = props.prodId\n    const noticeId = props.noticeId\n    const [commentValue, setcommentValue] = useState(\"\")\n\n    const handleClick = (e) => {\n        setcommentValue(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        let variables = {\n            content: commentValue,\n            userId: user.userData._id,\n        }\n        if (prodId) { variables.prodId = prodId }\n        if (noticeId) { variables.noticeId = noticeId }\n\n        Axios.post('/api/comment/', variables)\n            .then(response => {\n                if(response.data.success) {\n                    props.refreshFunction()\n                    setcommentValue(\"\")\n                } else {\n                    alert('댓글을 저장하지 못했습니다.')\n                }\n            })\n    }\n    return (\n        <div>\n            <br />\n            <div style={{ display: 'flex' }}>\n                <p style={{margin: '0 10px 0 0'}}>Replies</p>\n                <p >{props.number}</p>\n            </div>\n            <hr />\n\n            {props.commentLists && props.commentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} prodId={prodId} noticeId={noticeId} />\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} prodId={prodId} noticeId={noticeId} comment={props.commentLists}/>\n                    </React.Fragment>\n                )\n            ))\n            }\n            {/* Comment Lists */}\n            \n\n            {/* Root Comment Form */}\n\n            {user && user.userData.isAuth &&\n            <form style={{ display: 'flex' }} onSubmit={onSubmit} >\n                <TextArea  wrap=\"hard\" col=\"50\"\n                    style={{ width: '80%', borderRadius: '5px', margin: 'auto' }}\n                    onChange={handleClick}\n                    value={commentValue}\n                    placeholder=\"코멘트를 작성해 주세요\"\n                />\n                <br />\n                <Button style={{ width: '5%', height: '50px', margin: 'auto' }} onClick={onSubmit} > Submit</Button>\n            </form>\n            }\n        </div>\n    )\n}\n\nexport default Comment\n","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon, List } from 'antd'\nimport Axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Like from '../commons/Like'\nimport Comment from '../commons/Comment'\nimport moment from 'moment'\n\nfunction ProdDetailPage(props) {\n\n    const user = localStorage.getItem('userId')\n    const [Prod, setProd] = useState(null)\n    const [Comments, setComments] = useState([])\n    const [MainImage, setMainImage] = useState([])\n    const [PreImage, setPreImage] = useState([])\n    const [DDay, setDDay] = useState(0);\n    const [User, setUser] = useState(null);\n    const today = moment().format('YYYY-MM-DD')\n\n    const prodId = props.match.params.prodId\n    const variable = {\n        prodId: prodId,\n        originName: MainImage,\n        preName: PreImage\n    }\n    console.log(variable)\n\n    useEffect(() => {\n        Axios.get(`/api/prod/info/${prodId}`)\n            .then(response => {\n                if(response.data.success) {\n                    setProd(response.data.result)\n                    setMainImage(response.data.result.mainImage)\n                    setPreImage(response.data.result.preImage)\n                    setDDay(moment(response.data.result.endDate).diff(today, 'days'))\n                } else {\n                    alert('게시글 정보를 가져오는데 실패했습니다.')\n                }\n            })\n            if (user) {\n                Axios.get(`/api/user/info/${user}`)\n                    .then(response => {\n                        if(response.data.success) {\n                            setUser(response.data.result)\n                        } else {\n                            alert('유저 정보를 가져오는데 실패했습니다.')\n                        }\n                    })\n                }\n        refreshFunction()\n    }, [])\n\n    const refreshFunction = () => {\n        Axios.get('/api/comment/', { params: variable })\n            .then(response => {\n                if(response.data.success) {\n                    setComments(response.data.result)\n                } else {\n                    alert('코멘트 정보를 가져오는 것을 실패했습니다.')\n                }\n            })\n    }\n\n    const onDeleteClick = () => {\n        if((user === Prod.userId._id) || (User.isAdmin)) {\n            Axios.delete('/api/prod', {params: variable})\n                .then(response => {\n                    if(response.data.success) {\n                        props.history.push('/')\n                    } else {\n                        alert('상품 삭제에 실패했습니다.')\n                    }\n                })\n            } else {\n                alert('해당 상품 작성자만 삭제할 수 있습니다.')\n            }\n        }\n\n    const onModifyClick = () => {\n        props.history.push(`/modify/${prodId}`)\n    }\n\n    \n\n    return (\n        <div style={{ display: 'flex', justifyContent:'center', alignContent: 'center', alignItems:'center', width: '100%', height: '100%', flexDirection: 'column'}}>\n            {Prod &&\n            <>\n            <div style={{ display: 'flex', justifyContent:'center', width: '80%', height: '280px', alignContent: 'center', alignItems: 'center', textAlign: 'center', flexDirection: 'column'}}>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <a href={`/artist/${Prod.artistId._id}`}>\n                        <span style={{ display: 'inline-block', justifyContent: 'center', alignContent: 'center', width:'50px', height: '50px', borderRadius: '50%', backgroundColor:'black' }}>\n                            <img style={{ maxWidth: '90%', maxHeight: '90%', display: 'block', margin: '1rem auto' , objectFit: 'contain' }} src={Prod.artistId.mainImagePath} alt=\"artistImage\" />\n                        </span>\n                        <h3 style={{padding: 0, margin: 0}}> {Prod.artistId.name} </h3>\n                    </a>\n                </div>\n                <h1 style={{fontWeight: 800, fontSize: '4vh', margin: '10px 0px'}}>{Prod.name}</h1>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    {/* <span style={{ width:'25px', height: '25px', borderRadius: '50%', backgroundImage:'', marginRight: '0.5rem'}} /> */}\n                    <h4> {Prod.userId.name} </h4>\n                </div>\n            </div>\n            <div style={{ display: 'flex', height: '400px', width: '80%', alignItems:'center', backgroundColor: 'whitesmoke', borderRadius: '2rem'}}>\n                <div style={{ display: 'flex', width: '50%', flexDirection: 'column' }}>\n                    <img style={{ objectFit: 'contain', width: '300px', marginLeft: '10rem' }} src={`${Prod.preImagePath}`} alt=\"prodPreImage\"/>\n                </div>\n                <div style={{ display: 'flex', width: '40%', flexDirection: 'column', alignItems: 'flex-end' }}>\n                    <label>상품설명</label>\n                    <text style={{ marginTop: '1rem', fontWeight: 200, fontSize: '24px', color: 'black', textAlign: 'right' }}> {Prod.content} </text>\n                    <hr />\n                    <hr />\n                    <a href={Prod.link} style={{ fontSize: '20px'}}>\n                        사러가기\n                    </a>\n                    <hr />\n                    {DDay >= 0 ?\n                        <h2>입금 D-DAY {DDay}일</h2>\n                        :\n                        <h2>판매가 종료된 상품입니다.</h2>\n                    }\n                    <div>\n                        <List.Item\n                            actions={[ <Like prod prodId={Prod._id} userId={user}/>]}/>\n                    </div>\n                    {((user === Prod.userId._id) || (User && User.isAdmin)) && (\n                        <div>\n                            <button style={{ marginRight: '1rem' }} onClick={onModifyClick}> 수정하기</button>\n                            <button onClick={onDeleteClick}>지우기</button>\n                        </div>\n                        )}\n                </div>\n            </div>\n            <div style={{ display:'flex', marginTop: '5rem', flexDirection:'column' }}>\n                <img src={`${Prod.mainImagePath}`} alt=\"prodImage\"/>\n            </div>\n            </>\n            }\n            {/* {User && */}\n            <div style={{ width: '100%', padding: '3rem 4rem' }}>\n                <Comment refreshFunction={refreshFunction} commentLists={Comments} prodId={prodId} number={Comments.length}/>\n            </div>\n            {/* } */}\n        </div>\n    )\n}\n\nexport default withRouter(ProdDetailPage)\n","import React from 'react'\nimport { Tooltip } from 'antd'\nimport Like from './Like'\nimport { CommentOutlined } from '@ant-design/icons'\nimport { withRouter } from 'react-router-dom'\n\nfunction GridCard(props) {\n    const prod = props.prod\n    const index = props.index\n    const user = props.user\n    let rank = null\n    if (props.rank != null) {\n        rank = props.rank == 0 ? 1 : props.rank+1\n    }\n    const onClickHandler = (e) => {\n        e.preventDefault();\n        props.history.push(`/prod/${prod._id}`)\n    }\n\n    return (\n        <div key={index} style={{ width: '100%', height: '300px', display: 'flex', justifyContent: 'center',marginTop: '0.5rem', alignItems:'center' }}>\n            <div style={{ width: '70%', height: '300px', display: 'flex', justifyContent: 'center',marginTop: '1rem', alignItems:'center', backgroundColor: 'whitesmoke', borderRadius: '1rem' }} onClick={onClickHandler}>\n                <div style={{width: '85%', height: '300px', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n                {rank !== null &&\n                    <div style={{ marginRight: '2rem' }}>\n                        <h2>{rank}</h2>\n                    </div>\n                }\n                    <div style={{ width: '270px', height: '270px', margin: 0 }}>\n                        <img style={{ height: '270px', objectFit: 'cover' }} src={`${prod.preImagePath}`} alt={prod.name}/>\n                    </div>\n                    <div style={{ display: 'flex', width: '700px', height: '90%', marginLeft: '48px', flexDirection:'column', justifyContent: 'center', textAlign: 'right', alignItems:'flex-end'}}>\n                        <div style={{display: 'flex', flexDirection: 'column'}}>\n                            <h1>{prod.name}</h1>\n                            <text style={{ color: 'black'}}>{prod.content}</text>\n                            <text style={{ color: 'grey'}}>{user.name}</text>\n                        </div>\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '1rem' }}>\n                            <Like \n                                prodId={prod._id}\n                                userId={user._id}\n                            />\n                            <span key=\"comment\" style={{ marginLeft: '1rem' }}>\n                                <Tooltip title=\"comment\">\n                                    <CommentOutlined />\n                                </Tooltip>\n                                <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {props.comment} </span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(GridCard)\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport GridCard from '../commons/GridCard';\n\nfunction ArtistDetailPage(props) {\n\n    const [Prods, setProds] = useState([]);\n    const [Artist, setArtist] = useState(\"\");\n    const artistId = props.match.params.artistId\n\n    useEffect(() => {\n        Axios.get(`/api/prod/artist/${artistId}`)\n            .then(response => {\n                if(response.data.success) {\n                    setProds(response.data.result);\n                } else {\n                    alert('상품을 불러오는데 실패 했습니다.')\n                }\n            })\n        Axios.get(`/api/artist/info/${artistId}`)\n            .then(response => {\n                if(response.data.success) {\n                    setArtist(response.data.result)\n                    console.log(response.data.result)\n                } else {\n                    alert('아티스트 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <div style={{ width: '100%', height: '450px', display: 'flex', flexDirection: 'column', justifyContent: 'center', backgroundColor: 'grey', justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\n                <img style={{ maxHeight: '300px', maxWidth: '700px', marginBottom: '3rem' }} src={Artist.mainImagePath} alt=\"아티스트 이미지\"/>\n                <text style={{ position: 'absolute', marginTop: '10rem', fontSize: '30px', fontWeight: '250', color: 'white' }}>{Artist.name}</text>\n            </div>\n            {Prods && Prods.map((prod, index) => (\n                <GridCard\n                    prod={prod}\n                    index={index}\n                    user={prod.userId}\n                    comment={prod.comment.length}\n                 />\n            ))}\n        </div>\n    )\n}\n\nexport default withRouter(ArtistDetailPage)\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport DropAndCrop from '../UploadPage/Section/DropAndCrop';\nimport {\n    base64StringtoFile\n} from '../../../utils/ReusableUtils'\nimport { v4 } from 'uuid'\nimport Calendar from 'react-calendar'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction UploadPage(props) {\n        const user = localStorage.getItem('userId')\n        \n        const [Category, setCategory] = useState(\"\")\n        const [ProdName, setProdName] = useState(\"\");\n        const [Artists, setArtist] = useState([])\n        const [Content, setContent] = useState(\"\");\n        const [Link, setLink] = useState(\"\");\n        const [StartDate, setStartDate] = useState(new Date());\n        const [EndDate, setEndDate] = useState(new Date())\n\n        const [OnDrop, setOnDrop] = useState(false)\n\n        const [MainImage, setMainImage] = useState(\"\");\n        const [PreImage, setPreImage] = useState(\"\");\n        const [MainImagePath, setMainImagePath] = useState(\"\");\n        const [PreImagePath, setPreImagePath] = useState(\"\");\n\n        const [OriginFile, setOriginFile] = useState(null);\n        const [ImageSrc, setImageSrc] = useState(null)\n        const [ImageExt, setImageExt] = useState(null)\n        const imagePreviewCanvasRef = React.createRef()\n\n        const prodId = props.match.params.prodId\n        const uuid = v4();\n        useEffect(() => {\n            Axios.get('/api/artist/')\n                .then(response => {\n                    if (response.data.success) {\n                        setArtist(response.data.result)\n                    } else {\n                        alert('아티스트 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n            \n            Axios.get(`/api/prod/info/${prodId}`)\n                .then(response => {\n                    if (response.data.success) {\n                        if (response.data.result.userId._id !== user) {\n                            props.history.push('/')\n                        }\n                        setCategory(response.data.result.artistId._id)\n                        setProdName(response.data.result.name)\n                        setContent(response.data.result.content)\n                        setLink(response.data.result.link)\n                        setMainImage(response.data.result.mainImage)\n                        setPreImage(response.data.result.preImage)\n                        setMainImagePath(response.data.result.mainImagePath)\n                        setPreImagePath(response.data.result.preImagePath)\n                        setStartDate(new Date(response.data.result.startDate))\n                        setEndDate(new Date(response.data.result.endDate))\n                    } else {\n                        alert('상품 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n        }, [])\n\n        const onNameChange = (e) => {\n            setProdName(e.currentTarget.value)\n        }\n        const onContentChange = (e) => {\n            setContent(e.currentTarget.value)\n        }\n        const onCategoryChange = (e) => {\n            setCategory(e.currentTarget.value)\n        }\n        const onLinkChange = (e) => {\n            setLink(e.currentTarget.value)\n        }\n\n        const onDropClick = (e) => {\n            e.preventDefault()\n            setOnDrop(!OnDrop)\n        }\n\n        async function onSubmit (e) {\n            e.preventDefault();\n            const imgSrc = ImageSrc\n\n\n            if(imgSrc && OnDrop) {\n                const FileName = ProdName\n                const canvasRef = imagePreviewCanvasRef.current\n                const imgSrcExt = ImageExt\n                const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt)\n                const preFilename = FileName + \"_preview.\" + imgSrcExt\n                const originFilename = FileName + '.' + imgSrcExt\n                const newCroppedFile = base64StringtoFile(imageData64, preFilename)\n                // let originFormData = new FormData;\n                // let preFormData = new FormData;\n                // const config = {\n                //     header: {'content-type': 'multipart/form-data'}\n                // }\n                // originFormData.append(\"file\", OriginFile)\n                // preFormData.append(\"file\", newCroppedFile)\n\n                await Axios.post('/api/prod/deleteImage', { name: MainImage })\n                    .then(response => {\n                        console.log(response)\n                    })\n                await Axios.post('/api/prod/deletePreImage', { name: PreImage })\n\n                // Axios.post('/api/file/deleteImage', {url: MainImage})\n                //     .then(response => {\n                //         if(!response.data.success) {\n                //             alert('파일 삭제에 실패했습니다.')\n                //         }\n                //     })\n                // Axios.post('/api/file/deleteImage', {url: PreImage})\n                //     .then(response => {\n                //         if(!response.data.success) {\n                //             alert('파일 삭제에 실패했습니다.')\n                //         }\n                //     })\n\n                let image = await Axios.post('/api/prod/getUrl', {name: uuid + originFilename})\n                    .then(response => {\n                            setMainImage(response.data.filename)\n                            setMainImagePath(response.data.getURL)\n                            return (response.data)\n                    })\n                await Axios.put(image.postURL, OriginFile)\n                    .then(response => {\n\n                    \n                })\n                let preImage = await Axios.post('/api/prod/getPreUrl', {name: uuid + preFilename})\n                    .then(response => {\n                        setPreImage(response.data.filename)\n                        setPreImagePath(response.data.getURL)\n                        return (response.data)\n                })\n                await Axios.put(preImage.postURL, newCroppedFile)\n                    .then(response => {\n\n                })\n            }\n            const variable = {\n                'prodId': prodId,\n                'userId': user,\n                'name': ProdName,\n                'artistId': Category,\n                'link': Link,\n                'preImage': PreImage,\n                'mainImage': MainImage,\n                'preImagePath': PreImagePath,\n                'mainImagePath': MainImagePath,\n                'startDate': StartDate,\n                'endDate': EndDate,\n                'content': Content\n            }\n            Axios.put('/api/prod/', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        message.success('성공적으로 업로드를 완료했습니다.')\n                        props.history.push('/')\n                    } else {\n                        alert('데이터 저장에 실패했습니다.')\n                    }\n                })\n        }\n\n        const refreshOriginFile = (file) => {\n            setOriginFile(file)\n            return file\n        }\n\n        const refreshImageSrc = (src) => {\n            setImageSrc(src)\n        }\n\n        const refreshImageExt = (ext) => {\n            setImageExt(ext)\n        }\n\n        const onStartDateChange = (date) => {\n            setStartDate(date)\n        }\n\n        const onEndDateChange = (date) => {\n            setEndDate(date)\n        }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Prod Modify </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n            {OnDrop === false ? \n                <React.Fragment>\n                    {PreImage && MainImage &&\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                        <div style={{ width:'45%' }}>\n                            <p>Preview</p>\n                            <img style={{ maxWidth: '100%', marginBottom: '2rem' }} src={`${PreImagePath}`} alt=\"thumbnail\" />\n                        </div>\n                        <div style={{ width:'45%' }}>\n                            <p>Main Image</p>\n                            <img style={{ maxWidth: '100%' }} src={`${MainImagePath}`} alt=\"mainImage\" />\n                        </div>\n                    </div>\n                    }\n                </React.Fragment>\n                :\n                <DropAndCrop\n                    OriginFile={OriginFile} setOriginFile={refreshOriginFile}\n                    ImageSrc={ImageSrc} setImageSrc={refreshImageSrc}\n                    setImageExt={refreshImageExt}\n                    canvas={imagePreviewCanvasRef}/>\n            }\n            {OnDrop===false ? \n                <button onClick={onDropClick}>이미지 변경</button>\n                :\n                <button onClick={onDropClick}>이미지 취소</button>\n            }\n            <br />\n            <br />\n            <label>상품 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={ProdName}\n            />\n            <br />\n            <br />\n            <label>내용</label>\n            <TextArea\n                onChange={onContentChange}\n                value={Content}\n            />\n            <br />\n            <br />\n            <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                <div style={{ marginLeft: '1rem', width: '45%' }}>\n                    <label>펀딩 시작일</label>\n                    <Calendar\n                        onChange={onStartDateChange}\n                        value={StartDate}\n                    />\n                </div>\n                <div style={{ marginRight: '1rem', width: '45%' }}>\n                    <label>펀딩 종료일</label>\n                    <Calendar\n                        onChange={onEndDateChange}\n                        value={EndDate}\n                    />\n                </div>\n            </div>\n            <br />\n            <br />\n            <label>링크</label>\n            <TextArea\n                onChange={onLinkChange}\n                value={Link}\n            />\n            <br />\n            <br />\n            <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                {Content && Artists.map((artist, index) => (\n                    artist._id === Category ? <option key={index} value={artist._id} selected>{artist.name}</option> : <option key={index} value={artist._id}>{artist.name}</option>\n                ))}\n            </select>\n            <br />\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(UploadPage)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios'\nimport GridCard from '../commons/GridCard'\n\nfunction NewProdPage() {\n    \n    const [Prods, setProds] = useState([])\n    const [Page, setPage] = useState(0)\n    const [StartId, setStartId] = useState(0)\n    const [EndId, setEndId] = useState(0)\n\n    const infiniteScroll = () => {\n        let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight)\n        let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n        let clientHeight = document.documentElement.clientHeight;\n        \n        if (scrollTop + clientHeight === scrollHeight) {\n            setPage(Page+1)\n        }\n    }\n    \n    function maxFunc(n, o) {\n        return n > o ? n : o\n    }\n    \n    function minFunc(n, o) {\n        return n < o ? n : o\n    }\n\n    useEffect(() => {\n        Axios.get(`/api/prod/`, { params: { startId: StartId, endId: EndId }})\n            .then(response => {\n                setProds([...Prods,...response.data.result])\n                setStartId(StartId === 0 ? response.data.result[0]._id : maxFunc(Prods[0]._id, response.data.result[0]._id))\n                setEndId(EndId === 0 ? response.data.result[response.data.result.length - 1]._id : minFunc(Prods[Prods.length - 1]._id, response.data.result[response.data.result.length - 1]._id))\n            })\n            .catch(err => { console.log(err) })\n    }, [Page])\n\n    useEffect(() => {\n        window.addEventListener('scroll', infiniteScroll)\n        return () => {\n            window.removeEventListener('scroll', infiniteScroll)\n        }\n    }, [])\n\n\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 최신 굿즈들 </h2>\n                <hr />\n            </div>\n            {Prods && Prods.map((prod, index) => (\n                <GridCard\n                    prod={prod}\n                    index={index}\n                    user={prod.userId}\n                    comment={prod.comment.length}\n                 />\n            ))}\n        </div>\n    )\n}\n\nexport default withRouter(NewProdPage)\n","import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\nimport GridCard from '../commons/GridCard'\nimport { withRouter } from 'react-router-dom'\n\nfunction RankingPage() {\n    \n    const [Prods, setProds] = useState([])\n    const [Page, setPage] = useState(0)\n    \n    const infiniteScroll = () => {\n        let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight)\n        let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop)\n        let clientHeight = document.documentElement.clientHeight;\n        \n        if (scrollTop + clientHeight === scrollHeight) {\n            setPage(Page+1)\n        }\n    }\n\n    useEffect(() => {\n        Axios.get(`/api/prod/best/${Page}`)\n            .then(response => {\n                setProds(response.data.result)\n            })\n    }, [Page])\n\n    useEffect(() => {\n        window.addEventListener('scroll', infiniteScroll)\n        return () => {\n            window.removeEventListener('scroll', infiniteScroll)\n        }\n    }, [])\n    \n    return (\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 인기 굿즈 순위 </h2>\n                <hr />\n            </div>\n            {Prods && Prods.map((prod, index) => (\n                <GridCard\n                    rank={index}\n                    prod={prod._id}\n                    index={index}\n                    user={prod._id.userId}\n                    comment={prod.comment.length}\n                 />\n            ))}\n        </div>\n    )\n}\n\nexport default withRouter(RankingPage)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction PolicyPage() {\n    \n    return (\n        <div style={{ justifyContent: 'center', textAlign: 'center' }}>\n            <div style={{ width: '90%', display: 'inline-block', marginTop: '1rem'}}>\n                <h1>지덕체 이용약관</h1>    \n                <hr/>\n                <div style={{ textAlign: 'left' }}>\n                    <text>\n                        제1조 (목적)\n                        본 약관은 \"지적 덕후생활 공동체\"(이하 \"회사\"라 합니다)가 제공하는 지덕체 및 지덕체 관련 제반 서비스(이하 \"서비스\"라 합니다)의 이용과 관련하여 회사와 회원과의 권리, 의무 및 책임사항, 기타 필요한 사항을 규정함을 목적으로 합니다.\n                        제2조 (회원의 정의)\n                        ① 회원이란 회사가 제공하는 서비스에 접속하여 본 약관에 따라 회사의 이용절차에 동의하고 회사가 제공하는 서비스를 이용하는 이용자를 말합니다.\n                        제3조 (회원 가입)\n                        ① 회원이 되고자 하는 자는 회사가 정한 가입 양식에 따라 회원정보를 기입하고 \"확인\" 등의 버튼을 누르는 방법으로 회원 가입을 신청합니다.\n                        ② 회사는 제1항과 같이 회원으로 가입할 것을 신청한 자가 다음 각 호에 해당하지 않는 한 신청한 자를 회원으로 등록합니다.\n                        1. 등록 내용에 허위, 기재누락, 오기가 있는 경우\n                        2. 제6조 제2항에 해당하는 회원 자격 제한 및 정지, 상실을 한 경험이 있었던 경우\n                        3. 기타 회원으로 등록하는 것이 회사의 서비스 운영 및 기술상 현저히 지장이 있다고 판단되는 경우\n                        ③ 회원가입계약의 성립시기는 회사의 승낙이 가입신청자에게 도달한 시점으로 합니다.\n                        ④ 회원은 제1항의 회원정보 기재 내용에 변경이 발생한 경우, 즉시 변경사항을 정정하여 기재하여야 합니다.\n                        제4조 (서비스의 제공 및 변경)\n                        ① 회사는 회원에게 아래와 같은 서비스를 제공합니다.\n                        1. 커뮤니티 서비스\n                        2. 개인화 서비스\n                        3. 검색 서비스\n                        4. 기타 회사가 자체 개발하거나 다른 회사와의 협력계약 등을 통해 회원들에게 제공할 일체의 서비스\n                        ② 회사는 서비스의 내용 및 제공일자를 제7조 제2항에서 정한 방법으로 회원에게 통지하고, 제1항에 정한 서비스를 변경하여 제공할 수 있습니다.\n                        제5조 (서비스의 중단)\n                        ① 회사는 컴퓨터 등 정보통신설비의 보수점검·교체 및 고장, 통신의 두절 등의 사유가 발생한 경우에는 서비스의 제공을 일시적으로 중단할 수 있고, 새로운 서비스로의 교체, 기타 회사가 적절하다고 판단하는 사유에 기하여 현재 제공되는 서비스를 완전히 중단할 수 있습니다.\n                        ② 제1항에 의한 서비스 중단의 경우에 회사는 제7조 제2항에서 정한 방법으로 회원에게 통지합니다. 다만, 회사가 통제할 수 없는 사유로 인한 서비스의 중단(시스템 관리자의 고의, 과실이 없는 디스크 장애, 시스템 다운 등)으로 인하여 사전 통지가 불가능한 경우에는 그러하지 아니합니다.\n                        제6조 (회원 탈퇴 및 자격 상실 등)\n                        ① 회원은 사에 언제든지 자신의 회원 등록 말소(회원 탈퇴)를 요청할 수 있으며 회사는 위 요청을 받은 즉시 해당 회원의 회원 등록 말소를 위한 절차를 밟습니다.\n                        ② 회원 탈퇴가 이루어진 경우 회원의 게시물 중 개인 영역에 등록된 게시물 일체는 삭제됩니다. 다만, 커뮤니티 서비스, 기타 공용 게시판 등에 등록된 게시물은 삭제되지 않습니다.\n                        ③ 회원이 다음 각 호의 사유에 해당하는 경우, 회사는 회원의 회원자격을 적절한 방법으로 제한 및 정지, 상실시킬 수 있습니다.\n                        1. 가입 신청 시에 허위 내용을 등록한 경우\n                        2. 다른 사람의 서비스 이용을 방해하거나 그 정보를 도용하는 등 전자거래질서를 위협하는 경우\n                        3. 서비스를 이용하여 법령과 본 약관이 금지하거나 공서양속에 반하는 행위를 하는 경우\n                        ④ 회사가 회원의 회원자격을 상실시키기로 결정한 경우에는 회원등록을 말소합니다.\n                        ⑤ 이용자가 본 약관에 의해서 회원 가입 후 서비스를 이용하는 도중, 연속하여 1년 동안 서비스를 이용하기 위해 로그인 기록이 없는 경우, 회사는 30일 전에 안내 메일을 발송하며 회원의 자격을 휴면회원으로 변경하고 회원정보를 분리 보관합니다. 휴면회원이 로그인하면 휴면회원에서 해제됩니다.\n\n                        또한 연속하여 5년 동안 로그인 기록이 없는 경우에는 자동 탈퇴 30일 전에 안내 메일을 발송하며 자동 탈퇴 전까지 로그인을 하지 않는 경우 자동 탈퇴가 됩니다.\n\n                        자동 탈퇴시 커뮤니티 서비스, 기타 공용 게시판 등에 등록된 게시물은 자동 삭제되지 않으므로 삭제를 원하는 경우에는 반드시 탈퇴 전에 로그인 후 삭제하시기 바랍니다.\n\n                        제7조 (회원에 대한 통지)\n                        ① 회사가 특정 회원에게 서비스에 관한 통지를 하는 경우 회원정보에 등록된 이메일을 사용할 수 있습니다.\n                        ② 회사가 불특정다수 회원에 대한 통지를 하는 경우 7일 이상 공지사항 게시판에 게시함으로써 개별 통지에 갈음할 수 있습니다.\n                        제8조 (회원의 개인정보)\n                        회사는 서비스를 제공하기 위하여 관련 법령의 규정에 따라 회원으로부터 필요한 개인정보를 수집합니다. (개인정보에 대한 개별 항목은 개인정보처리방침에서 고지)\n\n                        제9조 (회사의 의무)\n                        ① 회사는 법령과 본 약관이 금지하거나 공서양속에 반하는 행위를 하지 않으며 본 약관이 정하는 바에 따라 지속적이고, 안정적으로 서비스를 제공하기 위해서 노력합니다.\n                        ② 회사는 회원이 안전하고 편리하게 서비스를 이용할 수 있도록 시스템을 구축합니다.\n                        ③ 회사는 회원이 원하지 않는 영리목적의 광고성 전자우편을 발송하지 않습니다.\n                        ④ 회사는 회원이 서비스를 이용함에 있어 회원에게 법률적인 증명이 가능한 고의 또는 중대한 과실을 입힐 경우 이로인한 손해를 배상할 책임이 있습니다.\n                        제10조 (회원의 ID 및 비밀번호에 대한 의무)\n                        ① 회사가 관계법령, \"개인정보보호정책\"에 의해서 그 책임을 지는 경우를 제외하고, 자신의 ID와 비밀번호에 관한 관리책임은 각 회원에게 있습니다.\n                        ② 회원은 자신의 ID 및 비밀번호를 제3자에게 이용하게 해서는 안됩니다.\n                        ③ 회원은 자신의 ID 및 비밀번호를 도난당하거나 제3자가 사용하고 있음을 인지한 경우에는 바로 회사에 통보하고 회사의 안내가 있는 경우에는 그에 따라야 합니다.\n                        제11조 (회원의 의무)\n                        ① 회원은 다음 각 호의 행위를 하여서는 안됩니다.\n                        1. 회원가입신청 또는 변경시 허위내용을 등록하는 행위\n                        2. 회사 및 제3자의 지적재산권을 침해하거나 회사의 권리와 업무 또는 제3자의 권리와 활동를 방해하는 행위\n                        3. 다른 회원의 ID를 도용하는 행위\n                        4. 관련 법령에 의하여 전송 또는 게시가 금지되는 정보(컴퓨터 프로그램 등)의 게시 또는 전송하는 행위\n                        5. 회사의 직원 또는 서비스의 관리자를 가장하거나 타인의 명의를 도용하여 정보를 게시, 전송하는 행위\n                        6. 컴퓨터 소프트웨어, 하드웨어, 전기통신 장비의 정상적인 가동을 방해, 파괴할 목적으로 고안된 소프트웨어 바이러스, 기타 다른 컴퓨터 코드, 파일, 프로그램을 포함하고 있는 자료를 게시하거나 전송하는 행위\n                        7. 스토킹(stalking) 등 다른 회원을 괴롭히는 행위\n                        8. 다른 회원에 대한 개인정보를 그 동의 없이 수집, 저장, 공개하는 행위\n                        9. 불특정 다수의 자를 대상으로 하여 광고 또는 선전을 게시하거나 음란물을 게시하는 행위\n                        ② 제1항에 해당하는 행위를 한 회원이 있을 경우 회사는 본 약관 제6조 제2, 3항에서 정한 바에 따라 회원의 회원자격을 적절한 방법으로 제한 및 정지, 상실시킬 수 있습니다.\n                        ③ 회원은 그 귀책사유로 인하여 회사나 다른 회원이 입은 손해를 배상할 책임이 있습니다.\n                        제12조 (공개게시물의 삭제 또는 이용제한)\n                        ① 회원의 공개게시물의 내용이 다음 각 호에 해당하는 경우 회사는 해당 공개게시물에 대한 접근을 임시적으로 차단하는 조치를 취할 수 있고, 7일 이내에 각 호의 동일 사례가 2회 이상 반복되는 경우 해당 게시물을 삭제 또는 해당 회원의 회원 자격을 제한, 정지 또는 상실시킬 수 있습니다.\n                        1. 다른 회원 또는 제3자를 비방하거나 중상 모략으로 명예를 손상시키는 내용\n                        2. 음란물, 욕설 등 공서양속에 위반되는 내용의 정보, 문장, 도형 등을 유포하는 내용\n                        3. 범죄행위와 관련이 있다고 판단되는 내용\n                        4. 다른 회원 또는 제3자의 저작권 등 기타 권리를 침해하는 내용\n                        5. 종교적, 정치적 분쟁을 야기하는 내용으로서, 이러한 분쟁으로 인하여 회사의 업무가 방해되거나 방해되리라고 판단되는 경우\n                        6. 타인의 개인정보, 사생활을 침해하거나 명예를 손상시키는 경우\n                        7. 동일한 내용을 중복하여 다수 게시하는 등 게시의 목적에 어긋나는 경우\n                        8. 불필요하거나 승인되지 않은 광고, 판촉물을 게재하는 경우\n                        ② 회원의 공개게시물로 인한 법률상 이익 침해를 근거로, 다른 회원 또는 제3자가 회원 또는 회사를 대상으로 하여 민형사상의 법적 조치(예:고소, 가처분신청, 손해배상청구소송)를 취하는 동시에 법적 조치와 관련된 게시물의 삭제를 요청해오는 경우, 회사는 동 법적 조치의 결과(예: 검찰의 기소, 법원의 가처분결정, 손해배상판결)가 있을 때까지 관련 게시물에 대한 접근을 잠정적으로 제한할 수 있습니다.\n                        제13조 (저작권의 귀속 및 게시물의 이용)\n                        ① 회사가 작성한 저작물에 대한 저작권, 기타 지적재산권은 회사에 귀속합니다.\n                        ② 회원은 회사가 제공하는 서비스를 이용함으로써 얻은 정보를 회사의 사전승낙 없이 복제, 전송, 출판, 배포, 방송, 기타 방법에 의하여 영리목적으로 이용하거나 제3자에게 이용하게 하여서는 안됩니다.\n                        ③ 회원이 서비스 내에 게시한 게시물의 저작권은 게시한 회원에게 귀속됩니다. 단, 회사는 서비스의 운영, 전시, 전송, 배포, 홍보의 목적으로 회원의 별도의 허락 없이 무상으로 저작권법에 규정하는 공정한 관행에 합치되게 합리적인 범위 내에서 다음과 같이 회원이 등록한 게시물을 사용할 수 있습니다.\n                        1. 서비스 내에서 회원 게시물의 복제, 수정, 개조, 전시, 전송, 배포 및 저작물성을 해치지 않는 범위 내에서의 편집 저작물 작성\n                        2. 미디어, 통신사 등 서비스 제휴 파트너에게 회원의 게시물 내용을 제공, 전시 혹은 홍보하게 하는 것. 단, 이 경우 회사는 별도의 동의 없이 회원의 이용자ID 외에 회원의 개인정보를 제공하지 않습니다.\n                        3. 회사는 전항 이외의 방법으로 회원의 게시물을 이용하고자 하는 경우, 전화, 팩스, 전자우편 등의 방법을 통해 사전에 회원의 동의를 얻어야 합니다.\n                        제14조 (광고게재 및 광고주와의 거래)\n                        ① 회사가 회원에게 서비스를 제공할 수 있는 서비스 투자기반의 일부는 광고게재를 통한 수익으로부터 나옵니다. 회원은 회원이 등록한 게시물의 내용을 활용한 광고게재 및 기타 서비스상에 노출되는 광고게재에 대해 동의합니다.\n                        ② 회사는 서비스상에 게재되어 있거나 서비스를 통한 광고주의 판촉활동에 회원이 참여하거나 교신 또는 거래를 함으로써 발생하는 손실과 손해에 대해 책임을 지지 않습니다\n                        제15조 (약관의 개정)\n                        ① 회사는 약관의규제등에관한법률, 전자거래기본법, 전자서명법, 정보통신망이용촉진등에관한법률 등 관련법을 위배하지 않는 범위에서 본 약관을 개정할 수 있습니다.\n                        ② 다만, 개정 내용이 회원에게 불리할 경우에는 적용일자 30일 이전부터 적용일자 전일까지 공지합니다.\n                        ③ 회원은 변경된 약관에 대해 거부할 권리가 있습니다. 회원은 변경된 약관이 공지된 후 15일 이내에 거부의사를 표명할 수 있습니다. 회원이 거부하는 경우 회사는 당해 회원과의 계약을 해지할 수 있습니다. 만약 회원이 변경된 약관이 공지된 후 15일 이내에 거부의사를 표시하지 않는 경우에는 동의하는 것으로 간주합니다.\n                        제16조 (재판관할)\n                        회사와 회원간에 발생한 서비스 이용에 관한 분쟁에 대하여는 대한민국 법을 적용하며, 본 분쟁으로 인한 소는 민사소송법상의 관할을 가지는 대한민국의 법원에 제기합니다.\n                    </text>\n                </div>\n            </div>\n        </div>\n    \n    )\n}\n\nexport default withRouter(PolicyPage)\n","import React from 'react'\n\nfunction NoticeGrid(props) {\n    console.log(props)\n    return (\n        <div style={{ display: 'inline-block', width: '100%' }}>\n                <div style={{ width: '100%', height: '50px', display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems:'center' }}>\n                    <div style={{ width: '10% '}}>\n                        <text>{props.index}</text>\n                    </div>\n                    <a href={`/notice/${props.notice._id}`}>\n                        <div style={{ width: '100% ', textAlign: 'left'}}>\n                            <text>{props.notice.title}</text>\n                        </div>\n                    </a>\n                    <div style={{ width: '20% '}}>\n                        <text>{props.notice.userId.name}</text>\n                    </div>\n                </div>\n            <hr/>\n        </div>\n        )\n}\n\nexport default NoticeGrid\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport NoticeGrid from './Sections/NoticeGrid'\nimport { withRouter } from 'react-router-dom'\n\nfunction NoticePage() {\n\n    const userId = localStorage.getItem('userId')\n    const [User, setUser] = useState(null)\n    const [Notice, setNotice] = useState([])\n    const [Page, setPage] = useState(0)\n\n    useEffect(() => {\n        Axios.get(`/api/notice/${Page}`)\n            .then(response => {\n                if(response.data.success) {\n                    setNotice(response.data.result)\n                } else {\n                    alert('공지사항을 가져오는데 실패했습니다.')\n                }\n            })\n        if (userId) {\n            Axios.get(`/api/user/info/${userId}`)\n                .then(response => {\n                    if(response.data.success) {\n                        setUser(response.data.result)\n                    } else {\n                        alert('유저 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n            }\n    }, [])\n\n    return (\n        <div style={{ width: '100%', justifyContent: 'center', textAlign: 'center' }}>\n            <div style={{ width: '80%', height: '80%', display:'inline-block', marginTop: '2rem' }}>\n                <h1>공지사항</h1>\n                {User && User.isAdmin &&\n                    <a href=\"/uploadNotice\">글쓰기</a>\n                }\n                <div style={{ width: '100%', height: '50px', display: 'flex', flexDirection: 'row', justifyContent:'space-between' }}>\n                    <div style={{ width: '10% '}}>\n                        <h3>index</h3>\n                    </div>\n                    <div style={{ width: '70% ', textAlign: 'left'}}>\n                        <text>title</text>\n                    </div>\n                    <div style={{ width: '20% '}}>\n                        <text>writer</text>\n                    </div>\n                </div>\n                <hr/>\n                <div style={{ width: '100%', justifyItems: 'center', display: 'flex', flexDirection: 'column' }}>\n                    {Notice && Notice.map((notice, index) => (\n                        <NoticeGrid\n                            notice={notice}\n                            index={index+1}\n                        />\n                    ))}\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(NoticePage)\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport { message } from 'antd'\nimport { useSelector } from 'react-redux'\nimport Comment from '../commons/Comment'\n\nfunction NoticeDetailPage(props) {\n\n    const user = useSelector(state => state.user)\n    const noticeId = props.match.params.noticeId\n    const [Notice, setNotice] = useState([])\n    const [Comments, setComments] = useState([])\n\n\n    useEffect(() => {\n        Axios.get(`/api/notice/info/${noticeId}`)\n            .then(response => {\n                if(response.data.success) {\n                    setNotice(response.data.result)\n                } else {\n                    alert('공지사항 정보를 가져오는데 실패했습니다.')\n                }\n            })\n            refreshFunction()\n    }, [])\n\n    const onModifyClick = (e) => {\n        e.preventDefault()\n        props.history.push(`/notice/modify/${noticeId}`)\n    }\n\n    const variable = {\n        noticeId: noticeId\n    }\n\n    const refreshFunction = () => {\n        Axios.get('/api/comment', { params: variable })\n            .then(response => {\n                if(response.data.success) {\n                    setComments(response.data.result)\n                } else {\n                    alert('코멘트 정보를 가져오는 것을 실패했습니다.')\n                }\n            })\n    }\n\n    const onDeleteClick = (e) => {\n        e.preventDefault();\n        Axios.delete(`/api/notice/${noticeId}`)\n            .then(response => {\n                if(response.data.success) {\n                    message.success('삭제에 성공했습니다.')\n                    props.history.push('/')\n                } else {\n                    message.error('삭제에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>\n            <div style={{ display: 'flex', flexDirection: 'column', marginTop: '2rem', textAlign: 'center', justifyContent: 'center', alignItems: 'center' }}>\n                <h1>공지사항</h1>\n                <div style={{ width: '80%', borderRadius: '1rem', backgroundColor: 'gray', height: '1000px', display: 'flex', justifyContent: 'start', flexDirection: 'column', alignItems:'center' }}>\n                    <text style={{ fontSize: '40px', fontWeight: '1000', color: 'white', marginTop: '1rem' }}> {Notice.title} </text>\n                    <div style={{ marginTop: '3rem', width: '80%', textAlign: 'left' }}>\n                        <text style={{ whiteSpace: 'pre-line', color: 'white', fontSize: '18px', fontWeight: '500' }}>{Notice.content}</text>\n                    </div>\n\n                    {user && user.userData.isAdmin &&\n                    <div>\n                        <button onClick={onModifyClick}>수정하기</button>\n                        <button onClick={onDeleteClick}>삭제하기</button>\n                    </div>\n                    }\n                </div>\n                <div style={{ width: '100%', padding: '3rem 4rem', textAlign: 'left' }}>\n                    <Comment refreshFunction={refreshFunction} commentLists={Comments} noticeId={noticeId} number={Comments.length}/>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default withRouter(NoticeDetailPage)\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input } from 'antd'\nimport Axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction UploadNoticePage(props) {\n    \n    const user = localStorage.getItem('userId')\n    const [TitleName, setTitleName] = useState(\"\")\n    const [Content, setContent] = useState(\"\");\n    const [StartDate, setStartDate] = useState(new Date());\n    const [EndDate, setEndDate] = useState(new Date())\n\n    const onTitleChange = (e) => {\n        setTitleName(e.currentTarget.value)\n    }\n\n    const onContentChange = (e) => {\n        setContent(e.currentTarget.value)\n    }\n\n    const onStartDateChange = (date) => {\n        setStartDate(date)\n    }\n\n    const onEndDateChange = (date) => {\n        setEndDate(date)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const variable = {\n            'userId': user,\n            'title': TitleName,\n            'content': Content,\n            'startDate': StartDate,\n            'endDate': EndDate\n        }\n        Axios.post('/api/notice/', variable)\n            .then(response => {\n                if(response.data.success) {\n                    message.success('성공적으로 업로드를 완료했습니다.')\n                    props.history.push('/')\n                } else {\n                    alert('데이터 저장에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Notice Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <label>공지사항 제목</label>\n                <Input\n                    onChange={onTitleChange}\n                    value={TitleName}\n                />\n                <br />\n                <br />\n                \n                <label>내용</label>\n                <TextArea wrap=\"hard\" col=\"50\"\n                    onChange={onContentChange}\n                    value={Content}\n                />\n                <br />\n                <br />\n\n                <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                    <div style={{ marginLeft: '1rem', width: '45%' }}>\n                        <label>공지 시작일</label>\n                        <Calendar\n                            onChange={onStartDateChange}\n                            value={StartDate}\n                        />\n                    </div>\n                    <div style={{ marginRight: '1rem', width: '45%' }}>\n                        <label>공지 종료일</label>\n                        <Calendar\n                            onChange={onEndDateChange}\n                            value={EndDate}\n                        />\n                    </div>\n                </div>\n                <br />\n                <br />\n\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </Form>\n   \n        </div>\n    )\n}\n\nexport default withRouter(UploadNoticePage)\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <footer style={{ marginTop: '2rem' }}>\n            <div style={{ height: '200px', backgroundColor: 'whitesmoke' }}>\n                <div style={{display: 'flex', justifyContent:'center', flexDirection: 'row'}}>\n                    <p style={{marginTop: '15px', marginRight: '20px' }}>대표자 | 김륜영</p>\n                    <a style={{marginTop: '15px', marginRight: '20px' }} href=\"/policy\">이용약관</a>\n                    <p style={{marginTop: '15px' }}>고객센터(이메일) | jiduckche.com@gmail.com</p>\n                </div>\n                <div style={{display: 'flex', justifyContent:'center', flexDirection: 'row'}}>\n                    <p style={{ marginRight: '20px' }}>찾아오시는 길 | 서울특별시 강남구 개포로 416 개포디지털혁신파크 새롬관</p>\n                    <p style={{}}>후원 | 42Seoul</p>\n                </div>\n                <div style={{display: 'flex', justifyContent:'center', flexDirection: 'row'}}>\n                    <p>Copyright ⓒ 2020 - 2021 jiduckche. All rights reserved.</p>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input } from 'antd'\nimport Axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction NoticeModifyPage(props) {\n    \n    const user = localStorage.getItem('userId')\n    const noticeId = props.match.params.noticeId\n    const [TitleName, setTitleName] = useState(\"\")\n    const [Content, setContent] = useState(\"\");\n    const [StartDate, setStartDate] = useState(new Date());\n    const [EndDate, setEndDate] = useState(new Date());\n\n    useEffect(() => {\n        Axios.get(`/api/notice/info/${noticeId}`)\n            .then(response => {\n                if(response.data.success) {\n                    console.log(response.data.result)\n                    setTitleName(response.data.result.title)\n                    setContent(response.data.result.content)\n                    setStartDate(new Date(response.data.result.startDate))\n                    setEndDate(new Date(response.data.result.endDate))\n                } else {\n                    alert('공지사항 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    const onTitleChange = (e) => {\n        setTitleName(e.currentTarget.value)\n    }\n\n    const onContentChange = (e) => {\n        setContent(e.currentTarget.value)\n    }\n\n    const onStartDateChange = (date) => {\n        setStartDate(date)\n    }\n\n    const onEndDateChange = (date) => {\n        setEndDate(date)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const variable = {\n            'userId': user,\n            'title': TitleName,\n            'content': Content,\n            'startDate': StartDate,\n            'endDate': EndDate\n        }\n        Axios.put(`/api/notice/${noticeId}`, variable)\n            .then(response => {\n                if(response.data.success) {\n                    message.success('성공적으로 업로드를 완료했습니다.')\n                    props.history.push('/')\n                } else {\n                    alert('데이터 저장에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Notice Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <label>공지사항 제목</label>\n                <Input\n                    onChange={onTitleChange}\n                    value={TitleName}\n                />\n                <br />\n                <br />\n                \n                <label>내용</label>\n                <TextArea wrap=\"hard\" col=\"50\"\n                    onChange={onContentChange}\n                    value={Content}\n                />\n                <br />\n                <br />\n\n                <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                    <div style={{ marginLeft: '1rem', width: '45%' }}>\n                        <label>공지 시작일</label>\n                        <Calendar\n                            onChange={onStartDateChange}\n                            value={StartDate}\n                        />\n                    </div>\n                    <div style={{ marginRight: '1rem', width: '45%' }}>\n                        <label>공지 종료일</label>\n                        <Calendar\n                            onChange={onEndDateChange}\n                            value={EndDate}\n                        />\n                    </div>\n                </div>\n                <br />\n                <br />\n\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </Form>\n   \n        </div>\n    )\n}\n\nexport default withRouter(NoticeModifyPage)\n","import React, { useState, useEffect } from 'react'\nimport { Input, Typography, Button, message } from 'antd'\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nconst { TextArea } = Input;\nconst { Title } = Typography\n\nfunction AuthEmailPage(props) {\n\n    const userId = localStorage.getItem('userId')\n    const [Value, setValue] = useState(\"\")\n\n    useEffect(() => {\n        Axios.get(`/api/user/authCode/${userId}`)\n            .then(response => {\n                if(response.data.success) {\n                    message.info('이메일로 인증코드가 발송되었습니다.')\n                } else {\n                    message.error('인증코드 발송에 실패했습니다.')\n                }\n            })\n    }, [])\n\n    const onChange = (e) => {\n        setValue(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const variable = {\n            authCode: Value\n        }\n        if (variable.authCode) {\n            Axios.put(`/api/user/emailAuth/${userId}`, variable)\n                .then(response => {\n                    if(response.data.success) {\n                        if(response.data.result.auth) {\n                            message.success('이메일 인증에 성공했습니다.')\n                            props.history.push('/')\n                        } else {\n                            message.warning('잘못된 인증번호입니다.')\n                            setValue(\"\")\n                        }\n                    }\n                })\n        }\n\n    }\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <Title level={2} style={{ marginTop: '8rem'}}>이메일 인증코드 입력</Title>\n            <form style={{ display: 'flex', justifyContent: 'center', marginTop: '1rem', flexDirection: 'row', alignItems: 'center' }} onSubmit={onSubmit}>\n                <TextArea style={{ width: '200px', height: '50px', marginRight: '1rem' }}\n                    placeholder=\"인증코드를 입력하세요\"\n                    value={Value}\n                    onChange={onChange}\n                />\n                <Button style={{ width : '100px', height: '30px' }} onClick={onSubmit}>인증하기</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(AuthEmailPage)\n","import React, { Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch } from \"react-router-dom\"\nimport Auth from \"../hoc/auth\"\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport UploadPage from \"./views/UploadPage/UploadPage\";\nimport MyPage from './views/MyPage/MyPage';\nimport EntUploadPage from './views/EntUploadPage/EntUploadPage';\nimport ArtistUploadPage from './views/ArtistUploadPage/ArtistUploadPage';\nimport ProdDetailPage from './views/ProdDetailPage/ProdDetailPage';\nimport ArtistDetailPage from './views/ArtistDetailPage/ArtistDetailPage';\nimport ProdModifyPage from './views/ProdModifyPage/ProdModifyPage'\nimport NewProdPage from './views/NewProdPage/NewProdPage'\nimport RankingPage from './views/RankingPage/RankingPage';\nimport PolicyPage from './views/PolicyPage/PolicyPage'\nimport NoticePage from './views/NoticePage/NoticePage'\nimport NoticeDetailPage from './views/NoticeDetailPage/NoticeDetailPage'\nimport UploadNoticePage from './views/UploadNoticePage/UploadNoticePage';\nimport Footer from \"./views/Footer/Footer\";\nimport NoticeModifyPage from './views/NoticeModifyPage/NoticeModifyPage';\nimport AuthEmailPage from './views/AuthEmailPage/AuthEmailPage';\n\nfunction App() {\n\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null, false)} />\n          <Route exact path=\"/authEmail\" component={Auth(AuthEmailPage, true, false, 1)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false, false)} />\n          <Route exact path=\"/upload\" component={Auth(UploadPage, true, false)} />\n          <Route exact path=\"/myPage\" component={Auth(MyPage, true, false)} />\n          <Route exact path=\"/uploadEnt\" component={Auth(EntUploadPage, true, true)} />\n          <Route exact path=\"/uploadArtist\" component={Auth(ArtistUploadPage, true, true)} />\n          <Route exact path=\"/prod/:prodId\" component={Auth(ProdDetailPage, null, false)} />\n          <Route exact path=\"/artist/:artistId\" component={Auth(ArtistDetailPage, null, false)} />\n          <Route exact path=\"/modify/:prodId\" component={Auth(ProdModifyPage, true, false)} />\n          <Route exact path=\"/newProd\" component={Auth(NewProdPage, null, false)} />\n          <Route exact path=\"/ranking\" component={Auth(RankingPage, null, false)} />\n          <Route exact path=\"/policy\" component={Auth(PolicyPage, null, false)} />\n          <Route exact path=\"/notice\" component={Auth(NoticePage, null, false)} />\n          <Route exact path=\"/notice/modify/:noticeId\" component={Auth(NoticeModifyPage, true, true)} />\n          <Route exact path=\"/notice/:noticeId\" component={Auth(NoticeDetailPage, null, false)} />\n          <Route exact path=\"/uploadNotice\" component={Auth(UploadNoticePage, true, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n})\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    AUTH_USER,\n    REGISTER_USER\n} from \"../_actions/types\"\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state , loginSuccess: action.payload }\n            break;\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n            break;\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n            break;\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n// ReactGA.initialize('UA-186251643-1')\n// ReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}